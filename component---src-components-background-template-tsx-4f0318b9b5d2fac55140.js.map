{"version":3,"sources":["webpack:///./src/components/backgroundHeader.tsx","webpack:///./src/components/backgroundMetaData.tsx","webpack:///./src/components/levelImage.tsx","webpack:///./src/components/backgroundTemplate.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/developerPath.ts"],"names":["BackgroundHeader","_ref","className","nextLevel","prevLevel","classes","classnames","styles","root","react_default","a","createElement","nextLevelContainer","gatsby_browser_entry","to","backgroundPath","levelName","gameNameUsa","index_esm","BackgroundMetaData","developer","system","year","levelNameRow","colSpan","gamePath","developerPath","systemPath","yearPath","LevelImage","width","height","src","alt","actualImageWidth","parseInt","imageAspectRatio","paddingTop","Math","floor","style","backgroundImage","query","BackgroundTemplate","data","levelData","currentLevel","useHotkeys","navigate","imgUrl","mainImg","publicURL","bgImageUrl","bgImg","childImageSharp","resize","levelDescription","layout","Helmet","blur","imageContainer","levelImage_LevelImage","levelImage","dimensions","metaDataContainer","backgroundMetaData_BackgroundMetaData","Object","assign","metaData","backgroundHeader_BackgroundHeader","header","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","_slug__WEBPACK_IMPORTED_MODULE_0__","map","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","Layout","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2___default","children","Fragment","logo"],"mappings":"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","file":"component---src-components-background-template-tsx-4f0318b9b5d2fac55140.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport classnames from \"classnames\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundHeader.module.css\";\n\ninterface BackgroundHeaderProps {\n    className?: string;\n    prevLevel: {\n        gameNameUsa: string;\n        levelName: string;\n    };\n    nextLevel: {\n        gameNameUsa: string;\n        levelName: string;\n    };\n}\n\nexport const BackgroundHeader: React.FunctionComponent<BackgroundHeaderProps> = ({\n    className,\n    prevLevel,\n    nextLevel,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    return (\n        <header className={classes}>\n            <div className={styles.nextLevelContainer}>\n                <Link to={backgroundPath(nextLevel)}>\n                    next up, <span className={styles.levelName}>{nextLevel.levelName}</span> from{\" \"}\n                    {nextLevel.gameNameUsa} <FaChevronRight />\n                </Link>\n            </div>\n        </header>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport classnames from \"classnames\";\nimport { systemPath } from \"../util/systemPath\";\nimport { yearPath } from \"../util/yearPath\";\nimport { gamePath } from \"../util/gamePath\";\nimport { developerPath } from \"../util/developerPath\";\n\nimport styles from \"./backgroundMetaData.module.css\";\n\ninterface BackgroundMetaDataProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    system: string;\n    year?: string;\n}\n\nexport const BackgroundMetaData: React.FunctionComponent<BackgroundMetaDataProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    developer,\n    system,\n    year,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    return (\n        <table className={classes}>\n            <tbody>\n                <tr className={styles.levelNameRow}>\n                    <td colSpan={2}>{levelName}</td>\n                </tr>\n                <tr>\n                    <td>game</td>\n                    <td>\n                        <Link to={gamePath(gameNameUsa)}>{gameNameUsa}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>developer</td>\n                    <td>\n                        <Link to={developerPath(developer)}>{developer}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>system</td>\n                    <td>\n                        <Link to={systemPath(system)}>{system}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>released</td>\n                    <td>\n                        <Link to={yearPath(year)}>{year || \"?\"}</Link>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./levelImage.module.css\";\n\ninterface LevelImageProps {\n    className?: string;\n    width: string;\n    height: string;\n    src: string;\n    alt: string;\n}\n\nexport const LevelImage: React.FunctionComponent<LevelImageProps> = ({ className, width, height, src, alt }) => {\n    const classes = classnames(styles.root, className);\n\n    // const [loading, setLoading] = useState(false);\n    // const [hadError, setHadError] = useState(false);\n\n    const actualImageWidth = parseInt(width);\n    const actualImageHeight = parseInt(height);\n    const imageAspectRatio = actualImageHeight / actualImageWidth;\n    const paddingTop = `${Math.floor(imageAspectRatio * 100)}%`;\n\n    return <div className={classes} style={{ paddingTop, backgroundImage: `url(${src})` }} />;\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { navigate } from \"@reach/router\";\nimport { graphql } from \"gatsby\";\nimport { Layout } from \"./layout\";\nimport { BackgroundHeader } from \"./backgroundHeader\";\nimport { BackgroundMetaData } from \"./backgroundMetaData\";\nimport { LevelImage } from \"./levelImage\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundTemplate.module.css\";\n\nconst BackgroundTemplate: React.FunctionComponent = ({ data }) => {\n    const levelData = data.currentLevel;\n    const prevLevel = data.prevLevel;\n    const nextLevel = data.nextLevel;\n\n    useHotkeys(\"left\", () => navigate(backgroundPath(prevLevel)));\n    useHotkeys(\"right\", () => navigate(backgroundPath(nextLevel)));\n\n    const imgUrl = data.mainImg.publicURL;\n    const bgImageUrl = data.bgImg.childImageSharp.resize.src;\n\n    const levelDescription = `${levelData.levelName} from ${levelData.gameNameUsa}`;\n\n    return (\n        <Layout>\n            <Helmet>\n                <title>{levelDescription} - FGBG</title>\n            </Helmet>\n            <div className={styles.blur} style={{ backgroundImage: `url(${bgImageUrl})` }} />\n            <div className={styles.root}>\n                <div className={styles.imageContainer}>\n                    <LevelImage\n                        className={styles.levelImage}\n                        width={data.dimensions.width}\n                        height={data.dimensions.height}\n                        src={imgUrl}\n                        alt={levelDescription}\n                    />\n                    <div className={styles.metaDataContainer}>\n                        <BackgroundMetaData className={styles.metaData} {...levelData} />\n                    </div>\n                </div>\n            </div>\n            <BackgroundHeader className={styles.header} prevLevel={prevLevel} nextLevel={nextLevel} />\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query(\n        $currentId: String!\n        $prevId: String!\n        $nextId: String!\n        $mainImageRelativePath: String!\n        $mainImageRegex: String!\n        $bgImageRelativePath: String!\n    ) {\n        currentLevel: googleSheetLeveldataRow(id: { eq: $currentId }) {\n            levelName\n            gameNameUsa\n            developer\n            system\n            year\n        }\n        prevLevel: googleSheetLeveldataRow(id: { eq: $prevId }) {\n            levelName\n            gameNameUsa\n        }\n        nextLevel: googleSheetLeveldataRow(id: { eq: $nextId }) {\n            levelName\n            gameNameUsa\n        }\n        mainImg: file(relativePath: { eq: $mainImageRelativePath }) {\n            publicURL\n        }\n        bgImg: file(relativePath: { eq: $bgImageRelativePath }) {\n            childImageSharp {\n                resize(height: 300, quality: 10) {\n                    src\n                }\n            }\n        }\n        dimensions: bgsizesCsv(file: { regex: $mainImageRegex }) {\n            width\n            height\n        }\n    }\n`;\n\nexport default BackgroundTemplate;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\nconst keyMap = {\n    PREV_LEVEL: \"ArrowLeft\",\n    NEXT_LEVEL: \"ArrowRight\",\n};\n\nexport const Layout: React.FunctionComponent = ({ children }) => {\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={styles.logo} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n"],"sourceRoot":""}