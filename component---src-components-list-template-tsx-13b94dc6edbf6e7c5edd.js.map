{"version":3,"sources":["webpack:///./src/components/listTemplate.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/util/developerPath.ts","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/components/levelListEntry.tsx","webpack:///./src/util/sort.ts"],"names":["getThumbnail","thumbnails","imageFileName","find","t","publicURL","indexOf","fileRoot","query","ListTemplate","_ref","data","_ref$pageContext","pageContext","listTypeValue","listType","levels","edges","map","e","node","byGame","groupBy","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_12__","logoClassName","styles","layoutLogo","react_helmet__WEBPACK_IMPORTED_MODULE_8__","className","root","levelCount","length","noscriptWarning","Object","keys","sort","byIgnoreThe","gameName","key","gameHeader","byLevelName","level","levelName","_levelListEntry__WEBPACK_IMPORTED_MODULE_11__","assign","linkClassName","listEntryLink","listEntry","thumbnailData","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","gameNameUsa","join","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","Layout","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3___default","children","logoClasses","classnames","logo","Fragment","to","developerPath","developer","systemPath","system","yearPath","year","seriesPath","series","gamePath","filename","split","BackgroundLink","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_3__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4___default","newPage","classes","entryPath","href","target","LevelListEntry","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_backgroundLink__WEBPACK_IMPORTED_MODULE_3__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4___default","aspectRatio","height","width","linkClasses","backgroundLink","imageContainer","style","paddingBottom","lowRes","src","dataUrl","alt","highRes","lazyImg","offsetBottom","b","localeCompare","thePrefix","aValue","replace","bValue"],"mappings":"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","file":"component---src-components-list-template-tsx-13b94dc6edbf6e7c5edd.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport classnames from \"classnames\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { fileRoot } from \"../util\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { Layout } from \"./layout\";\nimport { byLevelName, byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./listTemplate.module.css\";\n\ninterface Thumbnail {\n    publicURL: string;\n    width: number;\n    height: number;\n    dataUrl: string;\n}\n\nfunction getThumbnail(thumbnails: Thumbnail[], imageFileName: string): Thumbnail {\n    return thumbnails.find(t => t.publicURL.indexOf(fileRoot(imageFileName) + \"_thumb\") > -1);\n}\n\nconst ListTemplate: React.FunctionComponent = ({ data, pageContext: { listType, listTypeValue, thumbnails } }) => {\n    const levels = data.levels.edges.map(e => e.node);\n\n    const byGame = groupBy(levels, \"gameNameUsa\");\n\n    return (\n        <Layout logoClassName={styles.layoutLogo}>\n            <Helmet>\n                <title>{listTypeValue} - FGBG</title>\n            </Helmet>\n            <div className={styles.root}>\n                <h1>\n                    {listTypeValue}{\" \"}\n                    <span className={styles.levelCount}>\n                        {levels.length} background{levels.length !== 1 && \"s\"}\n                    </span>\n                </h1>\n                <noscript>\n                    <div className={styles.noscriptWarning}>this page loads faster with JavaScript enabled</div>\n                </noscript>\n                <ul>\n                    {Object.keys(byGame)\n                        .sort(byIgnoreThe)\n                        .map(gameName => {\n                            return (\n                                <li key={gameName}>\n                                    {gameName !== listTypeValue && <h2 className={styles.gameHeader}>{gameName}</h2>}\n                                    <ul>\n                                        {byGame[gameName].sort(byLevelName).map(level => (\n                                            <li key={level.levelName}>\n                                                <LevelListEntry\n                                                    linkClassName={styles.listEntryLink}\n                                                    className={styles.listEntry}\n                                                    {...level}\n                                                    thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query($filter: googleSheetLeveldataRowFilterInput!) {\n        levels: allGoogleSheetLeveldataRow(filter: $filter) {\n            edges {\n                node {\n                    developer\n                    gameNameUsa\n                    levelName\n                    system\n                    imageFileName\n                }\n            }\n        }\n    }\n`;\n\nexport default ListTemplate;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/game:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\ninterface LayoutProps {\n    logoClassName?: string;\n}\n\nexport const Layout: React.FunctionComponent = ({ logoClassName, children }) => {\n    const logoClasses = classnames(styles.logo, logoClassName);\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={logoClasses} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./slug\";\nexport * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\nexport const LevelListEntry: React.FunctionComponent = ({\n    className,\n    linkClassName,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    developer,\n    system,\n    children,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n    const linkClasses = classnames(styles.backgroundLink, linkClassName);\n\n    return (\n        <BackgroundLink className={linkClasses} levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <div className={styles.imageContainer} style={{ paddingBottom: 200 * aspectRatio }}>\n                    <img\n                        className={styles.lowRes}\n                        src={thumbnailData.dataUrl}\n                        alt={`${levelName} from ${gameNameUsa}`}\n                    />\n                    <noscript>\n                        <img\n                            className={styles.highRes}\n                            src={thumbnailData.publicURL}\n                            alt={`${levelName} from ${gameNameUsa}`}\n                        />\n                    </noscript>\n                    <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                        <>\n                            <img\n                                className={styles.highRes}\n                                src={thumbnailData.publicURL}\n                                alt={`${levelName} from ${gameNameUsa}`}\n                            />\n                        </>\n                    </LazyLoad>\n                </div>\n                <div className={styles.levelName}>{children || levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n"],"sourceRoot":""}