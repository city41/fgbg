{"version":3,"sources":["webpack:///./src/components/listTemplate.tsx","webpack:///./src/pages/newest.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/developerPath.ts","webpack:///./src/util/otherPath.ts","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/lazyThumbnail.tsx","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/util/sort.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/components/levelListEntry.tsx"],"names":["getThumbnail","thumbnails","imageFileName","find","t","publicURL","indexOf","fileRoot","query","ListTemplate","_ref","children","dontGroup","data","_ref$pageContext","pageContext","listTypeValue","description","levels","edges","map","e","node","byGame","groupBy","gameBody","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","level","key","levelName","_levelListEntry__WEBPACK_IMPORTED_MODULE_11__","Object","assign","linkClassName","styles","listEntryLink","className","listEntry","thumbnailData","keys","sort","byIgnoreThe","gameName","gameHeader","byLevelName","_layout__WEBPACK_IMPORTED_MODULE_12__","logoClassName","layoutLogo","react_helmet__WEBPACK_IMPORTED_MODULE_8__","root","levelCount","length","noscriptWarning","NewestPage","latestLevels","flattenedThumbnails","width","childImageSharp","original","height","dataUrl","fixed","base64","latestLevelNodes","nl","filter","some","l","relativePath","listTemplateData","react__WEBPACK_IMPORTED_MODULE_2___default","_components_listTemplate__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","label","fullscreen","base","gameNameUsa","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","developerPath","developer","otherPath","other","systemPath","system","yearPath","year","seriesPath","series","gamePath","filename","split","Layout","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3___default","logoClasses","classnames","logo","Fragment","to","LazyThumbnail","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3__","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3___default","_ref$width","alt","aspectRatio","classes","style","paddingBottom","lowRes","src","highRes","lazyImg","offsetBottom","createHTML","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","b","localeCompare","thePrefix","aValue","bValue","BackgroundLink","newPage","entryPath","react_default","href","target","gatsby_browser_entry","levelListEntry_LevelListEntry","LevelListEntry","linkClasses","backgroundLink","backgroundLink_BackgroundLink","lazyThumbnail"],"mappings":"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","file":"component---src-pages-newest-tsx-76c7c4bed8cc9a1d4be8.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { fileRoot } from \"../util\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { Layout } from \"./layout\";\nimport { byLevelName, byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./listTemplate.module.css\";\n\ninterface Thumbnail {\n    publicURL: string;\n    width: number;\n    height: number;\n    dataUrl: string;\n}\n\nfunction getThumbnail(thumbnails: Thumbnail[], imageFileName: string): Thumbnail | undefined {\n    return thumbnails.find(t => t.publicURL.indexOf(fileRoot(imageFileName) + \"_thumb\") > -1);\n}\n\ninterface ListTemplateProps {\n    dontGroup?: boolean;\n    pageContext: {\n        listTypeValue: string;\n        thumbnails: Thumbnail[];\n        description?: string;\n    };\n    data: {\n        levels: {\n            edges: Array<{\n                node: {\n                    developer: string;\n                    gameNameUsa: string;\n                    levelName: string;\n                    system: string;\n                    imageFileName: string;\n                };\n            }>;\n        };\n    };\n}\n\nconst ListTemplate: React.FunctionComponent<ListTemplateProps> = ({\n    children,\n    dontGroup,\n    data,\n    pageContext: { listTypeValue, thumbnails, description },\n}) => {\n    const levels = data.levels.edges.map(e => e.node);\n\n    const byGame = groupBy(levels, \"gameNameUsa\");\n\n    const gameBody = dontGroup ? (\n        <ul>\n            {levels.map(level => (\n                <li key={level.levelName}>\n                    <LevelListEntry\n                        linkClassName={styles.listEntryLink}\n                        className={styles.listEntry}\n                        {...level}\n                        thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                    />\n                </li>\n            ))}\n        </ul>\n    ) : (\n        <ul>\n            {Object.keys(byGame)\n                .sort(byIgnoreThe)\n                .map(gameName => {\n                    return (\n                        <li key={gameName}>\n                            {gameName !== listTypeValue && <h2 className={styles.gameHeader}>{gameName}</h2>}\n                            <ul>\n                                {byGame[gameName].sort(byLevelName).map(level => (\n                                    <li key={level.levelName}>\n                                        <LevelListEntry\n                                            linkClassName={styles.listEntryLink}\n                                            className={styles.listEntry}\n                                            {...level}\n                                            thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                                        />\n                                    </li>\n                                ))}\n                            </ul>\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n\n    return (\n        <Layout logoClassName={styles.layoutLogo}>\n            <Helmet>\n                <title>{listTypeValue} - FGBG</title>\n            </Helmet>\n            <div className={styles.root}>\n                <h1>\n                    {listTypeValue}{\" \"}\n                    <span className={styles.levelCount}>\n                        {children || (\n                            <span>\n                                {levels.length} background{levels.length !== 1 && \"s\"}\n                            </span>\n                        )}\n                    </span>\n                </h1>\n                {description && <p>{description}</p>}\n                <noscript>\n                    <div className={styles.noscriptWarning}>this page loads faster with JavaScript enabled</div>\n                </noscript>\n                {gameBody}\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query ListTemplate($filter: googleSheetLeveldataRowFilterInput!) {\n        levels: allGoogleSheetLeveldataRow(filter: $filter) {\n            edges {\n                node {\n                    developer\n                    gameNameUsa\n                    levelName\n                    system\n                    imageFileName\n                }\n            }\n        }\n    }\n`;\n\nexport default ListTemplate;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { fileRoot } from \"../util\";\nimport ListTemplate from \"../components/listTemplate\";\n\ninterface NewestPageProps {\n    data: {\n        latestLevels: {\n            edges: Array<{\n                node: {\n                    levelId: number;\n                    levelName: string;\n                    gameNameUsa: string;\n                    system: string;\n                    developer: string;\n                    year: number;\n                    series: string;\n                    imageFileName: string;\n                };\n            }>;\n        };\n        thumbnails: {\n            edges: Array<{\n                node: {\n                    relativePath: string;\n                    publicURL: string;\n                    childImageSharp: {\n                        original: {\n                            width: number;\n                            height: number;\n                        };\n                        fixed: {\n                            base64: string;\n                        };\n                    };\n                };\n            }>;\n        };\n    };\n}\n\nconst NewestPage: React.FunctionComponent<NewestPageProps> = ({ data }) => {\n    const latestLevels = data.latestLevels.edges.map(e => e.node);\n    const thumbnails = data.thumbnails.edges.map(e => e.node);\n\n    const flattenedThumbnails = thumbnails.map(t => {\n        return {\n            ...t,\n            width: t.childImageSharp.original.width,\n            height: t.childImageSharp.original.height,\n            dataUrl: t.childImageSharp.fixed.base64,\n        };\n    });\n\n    const latestLevelNodes = latestLevels.map(nl => ({ node: nl }));\n\n    const pageContext = {\n        listTypeValue: \"the latest\",\n        thumbnails: flattenedThumbnails.filter(t =>\n            latestLevels.some(l => t.relativePath.indexOf(fileRoot(l.imageFileName)) > -1)\n        ),\n    };\n\n    const listTemplateData = { levels: { edges: latestLevelNodes } };\n\n    return (\n        <ListTemplate dontGroup data={listTemplateData} pageContext={pageContext}>\n            the 20 most recently added backgrounds\n        </ListTemplate>\n    );\n};\n\nexport default NewestPage;\n\nexport const query = graphql`\n    query NewestPage {\n        latestLevels: allGoogleSheetLeveldataRow(sort: { fields: levelId, order: DESC }, limit: 20) {\n            edges {\n                node {\n                    levelId\n                    levelName\n                    gameNameUsa\n                    system\n                    developer\n                    year\n                    series\n                    imageFileName\n                }\n            }\n        }\n        thumbnails: allFile(filter: { relativePath: { regex: \"/bgs/thumb/\" } }) {\n            edges {\n                node {\n                    relativePath\n                    publicURL\n                    childImageSharp {\n                        original {\n                            width\n                            height\n                        }\n                        fixed(base64Width: 10) {\n                            base64\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport interface BackgroundPathProps {\n    gameNameUsa: string;\n    levelName: string;\n}\n\nexport function backgroundPath({ gameNameUsa, levelName }: BackgroundPathProps, label?: string, fullscreen?: boolean) {\n    let base = \"/game:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n\n    if (label) {\n        base = [base, slug(label)].join(\"/\");\n    }\n\n    if (fullscreen) {\n        return [base, \"fullscreen\"].join(\"/\");\n    } else {\n        return base;\n    }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import { slug } from \"./slug\";\n\nexport function otherPath(other: string) {\n    return \"/other:\" + slug(other);\n}\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","export function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./slug\";\nexport * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./otherPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./layout.module.css\";\n\ninterface LayoutProps {\n    logoClassName?: string;\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({ logoClassName, children }) => {\n    const logoClasses = classnames(styles.logo, logoClassName);\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={logoClasses} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\n\nimport styles from \"./lazyThumbnail.module.css\";\n\ninterface LazyThumbnailProps {\n    className?: string;\n    width?: number;\n    thumbnailData: {\n        dataUrl: string;\n        publicURL: string;\n        width: number;\n        height: number;\n    };\n    alt?: string;\n}\n\nexport const LazyThumbnail: React.FunctionComponent<LazyThumbnailProps> = ({\n    className,\n    width = 200,\n    thumbnailData,\n    alt,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <div className={classes} style={{ width, paddingBottom: width * aspectRatio }}>\n            <img className={styles.lowRes} src={thumbnailData.dataUrl} alt={alt} />\n            <noscript>\n                <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n            </noscript>\n            <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                <>\n                    <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n                </>\n            </LazyLoad>\n        </div>\n    );\n};\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { LazyThumbnail } from \"./lazyThumbnail\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\ninterface LevelListEntryProps {\n    className?: string;\n    // TODO type this\n    thumbnailData: any;\n    linkClassName?: string;\n    levelName: string;\n    gameNameUsa: string;\n}\n\nexport const LevelListEntry: React.FunctionComponent<LevelListEntryProps> = ({\n    className,\n    linkClassName,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n    const linkClasses = classnames(styles.backgroundLink, linkClassName);\n    return (\n        <BackgroundLink className={linkClasses} levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <LazyThumbnail thumbnailData={thumbnailData} alt={`${levelName} from ${gameNameUsa}`} />\n                <div className={styles.levelName}>{children || levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n"],"sourceRoot":""}