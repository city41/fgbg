{"version":3,"sources":["webpack:///./src/components/backgroundHeader.tsx","webpack:///./src/components/backgroundLabels.tsx","webpack:///./src/components/backgroundMetaData.tsx","webpack:///./src/components/levelImage.tsx","webpack:///./src/components/correctionForm.tsx","webpack:///./src/components/correctionModal.tsx","webpack:///./src/components/backgroundTemplate.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/developerPath.ts","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx"],"names":["BackgroundHeader","_ref","className","nextLevel","prevLevel","classes","classnames","styles","root","react_default","a","createElement","nextLevelContainer","gatsby_browser_entry","to","backgroundPath","levelName","gameNameUsa","index_esm","BackgroundLabels","labels","currentLabel","fullscreen","map","label","body","isCurrentLabel","liCurrentLabel","key","BackgroundMetaData","developer","system","year","series","levelNameRow","colSpan","gamePath","seriesPath","developerPath","systemPath","yearPath","LevelImage","width","height","src","alt","children","actualImageWidth","parseInt","imageAspectRatio","paddingTop","Math","floor","style","mapToGoogle","gameName","url","siteUrl","submissionType","BASE_URL","useCorrectionForm","currentPathname","_useState","useState","inputs","setInputs","_useState2","hasSubmitted","setHasSubmitted","handleSubmit","event","preventDefault","fetch","queryString","Object","keys","reduce","building","inputKey","googleKey","value","encodeURIComponent","concat","join","getGoogleUrl","method","handleInputChange","persist","_Object$assign","assign","target","name","hasData","filter","k","some","trim","CorrectionForm","imageUrl","onClose","_useCorrectionForm","window","location","pathname","nonSubmittedHeader","submittedHeader","type","onClick","e","header","inputGrid","htmlFor","readOnly","onChange","disabled","CorrectionModal","isOpen","onRequestClose","lib_default","correctionForm_CorrectionForm","query","BackgroundTemplate","data","_ref$pageContext","pageContext","jsSecondRender","setJsSecondRender","correctionModalOpen","setCorrectionModalOpen","useEffect","levelData","currentLevel","useHotkeys","navigate","undefined","imgUrl","mainImg","publicURL","bgImageUrl","bgImg","childImageSharp","resize","twitterImageUrl","twitterImg","levelDescription","hideOnFirstRender","visibility","Fragment","fullscreenTitle","levelImage_LevelImage","fullscreenLevelImage","dimensions","levelImageFooter","backgroundLabels_BackgroundLabels","fullscreenLink","title","layout","correctionModal_CorrectionModal","blur","backgroundImage","imageContainer","correctionLink","levelImage","metaDataContainer","backgroundMetaData_BackgroundMetaData","metaData","backgroundHeader_BackgroundHeader","Helmet","seo","description","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","_slug__WEBPACK_IMPORTED_MODULE_0__","base","ProdPageRenderer","pageResources","InternalPageRenderer","json","fileRoot","filename","split","Layout","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3___default","logoClassName","logoClasses","logo","SEO","_ref$description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author"],"mappings":"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","file":"component---src-components-background-template-tsx-6b88deef50c56b57512c.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport classnames from \"classnames\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundHeader.module.css\";\n\ninterface BackgroundHeaderProps {\n    className?: string;\n    prevLevel: {\n        gameNameUsa: string;\n        levelName: string;\n    };\n    nextLevel: {\n        gameNameUsa: string;\n        levelName: string;\n    };\n}\n\nexport const BackgroundHeader: React.FunctionComponent<BackgroundHeaderProps> = ({\n    className,\n    prevLevel,\n    nextLevel,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    return (\n        <header className={classes}>\n            <div className={styles.nextLevelContainer}>\n                <Link to={backgroundPath(nextLevel)}>\n                    next up, <span className={styles.levelName}>{nextLevel.levelName}</span> from{\" \"}\n                    {nextLevel.gameNameUsa} <FaChevronRight />\n                </Link>\n            </div>\n        </header>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util\";\n\nimport styles from \"./backgroundLabels.module.css\";\n\ninterface BackgroundLabelsProps {\n    className?: string;\n    gameNameUsa: string;\n    levelName: string;\n    labels: string[];\n    currentLabel: string;\n    fullscreen?: boolean;\n}\n\nexport const BackgroundLabels: React.FunctionComponent<BackgroundLabelsProps> = ({\n    className,\n    gameNameUsa,\n    levelName,\n    labels,\n    currentLabel,\n    fullscreen,\n}) => {\n    return (\n        <ul className={styles.root}>\n            {labels.map(label => {\n                let body;\n\n                const isCurrentLabel = label === currentLabel;\n\n                if (isCurrentLabel) {\n                    body = <div className={styles.currentLabel}>{label}</div>;\n                } else {\n                    body = <Link to={backgroundPath({ gameNameUsa, levelName }, label, fullscreen)}>{label}</Link>;\n                }\n\n                return (\n                    <li className={isCurrentLabel && styles.liCurrentLabel} key={label}>\n                        {body}\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport classnames from \"classnames\";\nimport { systemPath, yearPath, gamePath, developerPath, seriesPath } from \"../util\";\n\nimport styles from \"./backgroundMetaData.module.css\";\n\ninterface BackgroundMetaDataProps {\n    className?: string;\n    levelName: string;\n    label?: string;\n    gameNameUsa: string;\n    system: string;\n    year: string;\n    series: string;\n}\n\nexport const BackgroundMetaData: React.FunctionComponent<BackgroundMetaDataProps> = ({\n    className,\n    levelName,\n    label,\n    gameNameUsa,\n    developer,\n    system,\n    year,\n    series,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    return (\n        <table className={classes}>\n            <tbody>\n                <tr className={styles.levelNameRow}>\n                    <td colSpan={2}>\n                        {levelName}\n                        {label && ` - ${label}`}\n                    </td>\n                </tr>\n                <tr>\n                    <td>game</td>\n                    <td>\n                        <Link to={gamePath(gameNameUsa)}>{gameNameUsa}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>series</td>\n                    <td>\n                        <Link to={seriesPath(series)}>{series}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>developer</td>\n                    <td>\n                        <Link to={developerPath(developer)}>{developer}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>system</td>\n                    <td>\n                        <Link to={systemPath(system)}>{system}</Link>\n                    </td>\n                </tr>\n                <tr>\n                    <td>released</td>\n                    <td>\n                        <Link to={yearPath(year)}>{year || \"?\"}</Link>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./levelImage.module.css\";\n\ninterface LevelImageProps {\n    className?: string;\n    width: string;\n    height: string;\n    src: string;\n    alt: string;\n}\n\nexport const LevelImage: React.FunctionComponent<LevelImageProps> = ({\n    className,\n    width,\n    height,\n    src,\n    alt,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    // const [loading, setLoading] = useState(false);\n    // const [hadError, setHadError] = useState(false);\n\n    const actualImageWidth = parseInt(width);\n    const actualImageHeight = parseInt(height);\n    const imageAspectRatio = actualImageHeight / actualImageWidth;\n    const paddingTop = `${Math.floor(imageAspectRatio * 100)}%`;\n\n    return (\n        <div className={classes} style={{ paddingTop }}>\n            <img src={src} alt={alt} />\n            {children}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./correctionForm.module.css\";\n\ninterface CorrectionFormProps {\n    className?: string;\n    imageUrl?: string;\n    onClose: () => void;\n}\n\nconst mapToGoogle = {\n    levelName: \"entry.1758812684\",\n    gameName: \"entry.1658808931\",\n    system: \"entry.2024056467\",\n    developer: \"entry.726710484\",\n    year: \"entry.906557948\",\n    series: \"entry.1788056905\",\n    url: \"entry.89449791\",\n    siteUrl: \"entry.36955456\",\n    submissionType: \"entry.1271839613\",\n};\n\nconst formId = \"1FAIpQLScSRFk3nVFwV0obvwZsd6H-oAG7SCXM7FsXZ6cU-YsyiqDzAQ\";\nconst BASE_URL = `https://docs.google.com/forms/d/e/${formId}/formResponse?`;\n\nfunction getGoogleUrl(inputs: any): string {\n    const queryParamArray = Object.keys(inputs).reduce((building, inputKey) => {\n        const googleKey = mapToGoogle[inputKey];\n        const value = encodeURIComponent(inputs[inputKey]);\n\n        return building.concat(`${googleKey}=${value}`);\n    }, []);\n\n    const queryString = queryParamArray.join(\"&\");\n\n    return BASE_URL + queryString;\n}\n\nconst useCorrectionForm = (currentPathname: string) => {\n    const [inputs, setInputs] = useState({ siteUrl: currentPathname, submissionType: \"correction\" });\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n\n        fetch(getGoogleUrl(inputs), {\n            method: \"POST\",\n        });\n\n        setHasSubmitted(true);\n    };\n\n    const handleInputChange = event => {\n        event.persist();\n        setInputs(inputs => ({ ...inputs, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        handleSubmit,\n        handleInputChange,\n        inputs,\n        hasSubmitted,\n    };\n};\n\nfunction hasData(inputs: { [key: string]: string }): boolean {\n    const keys = Object.keys(inputs).filter(k => k !== \"siteUrl\" && k !== \"submissionType\");\n\n    return keys.some(k => inputs[k] && inputs[k].trim());\n}\n\nexport const CorrectionForm: React.FunctionComponent<CorrectionFormProps> = ({ className, imageUrl, onClose }) => {\n    const { handleInputChange, handleSubmit, inputs, hasSubmitted }: any = useCorrectionForm(window.location.pathname);\n\n    const classes = classnames(styles.root, className);\n\n    const nonSubmittedHeader = (\n        <div>\n            <h3>Found an error?</h3>\n            All fields are optional, just fill in whatever needs fixing.\n        </div>\n    );\n\n    const submittedHeader = (\n        <div className={styles.submittedHeader}>\n            <h3>Thanks!</h3>\n            <div>Thanks for improving the site! We will correct the mistake right away</div>\n            <input\n                type=\"submit\"\n                value=\"OK\"\n                onClick={e => {\n                    onClose();\n                }}\n            />\n        </div>\n    );\n\n    return (\n        <div className={classes}>\n            <div>\n                <div className={styles.header}>\n                    <img src={imageUrl} />\n                    {hasSubmitted ? submittedHeader : nonSubmittedHeader}\n                </div>\n                {!hasSubmitted && (\n                    <div className={styles.inputGrid}>\n                        <label htmlFor=\"levelName\">level name</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"levelName\"\n                            value={inputs.levelName}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"gameName\">game name</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"gameName\"\n                            value={inputs.gameName}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"developer\">developer</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"developer\"\n                            value={inputs.developer}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"system\">system</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"system\"\n                            value={inputs.system}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"year\">year released</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"year\"\n                            value={inputs.year}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"series\">series</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"series\"\n                            value={inputs.series}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor=\"image\">URL of better image</label>\n                        <input\n                            readOnly={hasSubmitted}\n                            type=\"text\"\n                            name=\"url\"\n                            value={inputs.url}\n                            onChange={handleInputChange}\n                        />\n                        <input\n                            disabled={!hasData(inputs)}\n                            type=\"submit\"\n                            value=\"submit\"\n                            onClick={e => {\n                                handleSubmit(e);\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport Modal from \"react-modal\";\nimport { CorrectionForm } from \"./correctionForm\";\n\nimport styles from \"./correctionModal.module.css\";\n\ninterface CorrectionModalProps {\n    className?: string;\n    imageUrl?: string;\n    isOpen: boolean;\n    onRequestClose: () => void;\n}\n\nexport const CorrectionModal: React.FunctionComponent<CorrectionModalProps> = ({\n    className,\n    imageUrl,\n    isOpen,\n    onRequestClose,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    return (\n        <Modal className={classes} isOpen={isOpen} onRequestClose={onRequestClose}>\n            <CorrectionForm imageUrl={imageUrl} onClose={onRequestClose} />\n        </Modal>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport SEO from \"./seo\";\nimport { FaCompress, FaExpand } from \"react-icons/fa\";\nimport { Helmet } from \"react-helmet\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { navigate } from \"@reach/router\";\nimport { graphql } from \"gatsby\";\nimport { Layout } from \"./layout\";\nimport { BackgroundHeader } from \"./backgroundHeader\";\nimport { BackgroundLabels } from \"./backgroundLabels\";\nimport { BackgroundMetaData } from \"./backgroundMetaData\";\nimport { LevelImage } from \"./levelImage\";\nimport { backgroundPath } from \"../util/backgroundPath\";\nimport { CorrectionModal } from \"./correctionModal\";\n\nimport styles from \"./backgroundTemplate.module.css\";\n\nconst BackgroundTemplate: React.FunctionComponent = ({ data, pageContext: { currentLabel, labels, fullscreen } }) => {\n    const [jsSecondRender, setJsSecondRender] = useState(false);\n    const [correctionModalOpen, setCorrectionModalOpen] = useState(false);\n\n    useEffect(() => {\n        setJsSecondRender(true);\n    }, []);\n\n    const levelData = data.currentLevel;\n    const prevLevel = data.prevLevel;\n    const nextLevel = data.nextLevel;\n\n    useHotkeys(\"left\", () => navigate(backgroundPath(prevLevel, undefined, fullscreen)));\n    useHotkeys(\"right\", () => navigate(backgroundPath(nextLevel, undefined, fullscreen)));\n    useHotkeys(\"esc\", () => navigate(backgroundPath(levelData, currentLabel, false)));\n\n    const imgUrl = data.mainImg.publicURL;\n    const bgImageUrl = data.bgImg.childImageSharp.resize.src;\n    const twitterImageUrl = data.twitterImg.childImageSharp.resize.src;\n\n    const levelDescription = `${levelData.levelName} from ${levelData.gameNameUsa}`;\n\n    let body;\n\n    const hideOnFirstRender = { visibility: jsSecondRender ? \"visible\" : \"hidden\" };\n\n    if (fullscreen) {\n        body = (\n            <>\n                <div className={styles.fullscreenTitle}>\n                    {levelData.levelName}, {levelData.gameNameUsa}\n                </div>\n                <LevelImage\n                    className={styles.fullscreenLevelImage}\n                    width={data.dimensions.width}\n                    height={data.dimensions.height}\n                    src={imgUrl}\n                    alt={levelDescription}\n                />\n                <div className={styles.levelImageFooter}>\n                    {!!labels && (\n                        <BackgroundLabels {...levelData} labels={labels} currentLabel={currentLabel} fullscreen />\n                    )}\n                    <Link\n                        className={styles.fullscreenLink}\n                        title=\"leave fullscreen\"\n                        to={backgroundPath(levelData, currentLabel, false)}\n                    >\n                        <FaCompress style={hideOnFirstRender} />\n                    </Link>\n                </div>\n            </>\n        );\n    } else {\n        body = (\n            <Layout>\n                <CorrectionModal\n                    imageUrl={bgImageUrl}\n                    isOpen={correctionModalOpen}\n                    onRequestClose={() => setCorrectionModalOpen(false)}\n                />\n                <div className={styles.blur} style={{ backgroundImage: `url(${bgImageUrl})` }} />\n                <div className={styles.root}>\n                    <div className={styles.imageContainer}>\n                        <div className={styles.correctionLink} style={hideOnFirstRender}>\n                            <a onClick={() => setCorrectionModalOpen(true)}>submit a correction</a>\n                        </div>\n                        <LevelImage\n                            className={styles.levelImage}\n                            width={data.dimensions.width}\n                            height={data.dimensions.height}\n                            src={imgUrl}\n                            alt={levelDescription}\n                        />\n                        <div className={styles.levelImageFooter}>\n                            {!!labels && (\n                                <BackgroundLabels {...levelData} labels={labels} currentLabel={currentLabel} />\n                            )}\n                            <Link\n                                className={styles.fullscreenLink}\n                                title=\"fullscreen\"\n                                to={backgroundPath(levelData, currentLabel, true)}\n                            >\n                                <FaExpand style={hideOnFirstRender} />\n                            </Link>\n                        </div>\n                        <div className={styles.metaDataContainer}>\n                            <BackgroundMetaData className={styles.metaData} {...levelData} label={currentLabel} />\n                        </div>\n                    </div>\n                </div>\n                <BackgroundHeader className={styles.header} prevLevel={prevLevel} nextLevel={nextLevel} />\n            </Layout>\n        );\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>{levelDescription} - FGBG</title>\n            </Helmet>\n            <SEO title={levelDescription} description=\"fighting game backgrounds website\" imageUrl={twitterImageUrl} />\n            {body}\n        </>\n    );\n};\n\nexport const query = graphql`\n    query(\n        $currentId: Int!\n        $prevId: Int!\n        $nextId: Int!\n        $mainImageRelativePath: String!\n        $mainImageRegex: String!\n        $bgImageRelativePath: String!\n    ) {\n        currentLevel: googleSheetLeveldataRow(levelId: { eq: $currentId }) {\n            levelName\n            gameNameUsa\n            developer\n            system\n            year\n            series\n        }\n        prevLevel: googleSheetLeveldataRow(levelId: { eq: $prevId }) {\n            levelName\n            gameNameUsa\n        }\n        nextLevel: googleSheetLeveldataRow(levelId: { eq: $nextId }) {\n            levelName\n            gameNameUsa\n        }\n        mainImg: file(relativePath: { eq: $mainImageRelativePath }) {\n            publicURL\n        }\n        bgImg: file(relativePath: { eq: $bgImageRelativePath }) {\n            childImageSharp {\n                resize(height: 300, quality: 10) {\n                    src\n                }\n            }\n        }\n        twitterImg: file(relativePath: { eq: $bgImageRelativePath }) {\n            childImageSharp {\n                resize(height: 300) {\n                    src\n                }\n            }\n        }\n        dimensions: bgsizesCsv(file: { regex: $mainImageRegex }) {\n            width\n            height\n        }\n    }\n`;\n\nexport default BackgroundTemplate;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath(\n    { gameNameUsa, levelName }: { gameNameUsa: string; levelName: string },\n    label?: string,\n    fullscreen?: boolean\n) {\n    let base = \"/game:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n\n    if (label) {\n        base = [base, slug(label)].join(\"/\");\n    }\n\n    if (fullscreen) {\n        return [base, \"fullscreen\"].join(\"/\");\n    } else {\n        return base;\n    }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./slug\";\nexport * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\ninterface LayoutProps {\n    logoClassName?: string;\n}\n\nexport const Layout: React.FunctionComponent = ({ logoClassName, children }) => {\n    const logoClasses = classnames(styles.logo, logoClassName);\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={logoClasses} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SEOProps {\n    description?: string;\n    lang?: string;\n    meta: any[];\n    title: string;\n    imageUrl?: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({ description = \"\", lang = \"en\", meta = [], title, imageUrl }) => {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: imageUrl ? \"summary_large_image\" : \"summary\",\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `twitter:site`,\n                    content: \"@mattegreer\",\n                },\n                imageUrl\n                    ? {\n                          name: `twitter:image`,\n                          content: `https://www.fgbg.art${imageUrl}`,\n                      }\n                    : {},\n            ].concat(meta)}\n        />\n    );\n};\n\nexport default SEO;\n"],"sourceRoot":""}