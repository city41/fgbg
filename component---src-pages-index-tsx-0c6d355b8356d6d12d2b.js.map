{"version":3,"sources":["webpack:///./src/components/search.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/developerPath.ts","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/seo.tsx"],"names":["LevelResult","_ref","levelName","gameNameUsa","react_default","a","createElement","gatsby_browser_entry","to","backgroundPath","Search","_ref2","className","data","classes","classnames","downshift_esm","onChange","item","alert","JSON","stringify","_ref3","term","isOpen","getInputProps","inputValue","toLowerCase","filter","level","indexOf","system","developer","year","toString","series","map","search_LevelResult","BrowseColumn","props","title","values","v","key","pathFn","query","IndexPage","searchData","edges","e","node","layout","seo","esm","totalCount","styles","browseColumnContainer","pages_BrowseColumn","seriesPath","distinct","developerPath","developers","systemPath","systems","yearPath","years","search_Search","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","_slug__WEBPACK_IMPORTED_MODULE_0__","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Layout","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2___default","children","Fragment","logo","gamePath","fileRoot","filename","split","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"8MAoBMA,EAA8C,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,UAAWC,EAAkBF,EAAlBE,YAC9D,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIC,YAAe,CAAEP,YAAWC,iBACjCD,EADL,SACsBC,KAMrBO,EAA+C,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,UAAWC,EAAWF,EAAXE,KAChEC,EAAUC,IAAWH,GAqB3B,OACIR,EAAAC,EAAAC,cAAA,OAAKM,UAAWE,GACZV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWC,SAAU,SAAAC,GAAI,OAAIC,MAAMC,KAAKC,UAAUH,MAC7C,SAAAI,GAA2C,IAtB7BC,EAsBXC,EAAwCF,EAAxCE,OAAQC,EAAgCH,EAAhCG,cAAeC,EAAiBJ,EAAjBI,WACvB,OACItB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAWmB,KACXrB,EAAAC,EAAAC,cAAA,UACKkB,IA3BFD,EA4BuBG,EA3BzCH,GAILA,EAAOA,EAAKI,cAELd,EAAKe,OAAO,SAAAC,GACf,OACIA,EAAM3B,UAAUyB,cAAcG,QAAQP,IAAS,GAC/CM,EAAM1B,YAAYwB,cAAcG,QAAQP,IAAS,GACjDM,EAAME,OAAOJ,cAAcG,QAAQP,IAAS,GAC5CM,EAAMG,UAAUL,cAAcG,QAAQP,IAAS,GAC9CM,EAAMI,MAAQJ,EAAMI,KAAKC,WAAWJ,QAAQP,IAAS,GACtDM,EAAMM,OAAOL,QAAQP,GAAQ,KAZ1B,IA0B+Ca,IAAI,SAAAP,GAAK,OACnCzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+B,EAAgBR,oFCnD7D,IAAMS,EAAwC,SAAAC,GAC1C,OACInC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKiC,EAAMC,OACXpC,EAAAC,EAAAC,cAAA,UACKiC,EAAME,OAAOL,IAAI,SAAAM,GAAC,OACftC,EAAAC,EAAAC,cAAA,MAAIqC,IAAKD,GACLtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI+B,EAAMK,OAAOF,IAAKA,SAwCvCG,GAFEC,UA9B4B,SAAA7C,GAAc,IAAXY,EAAWZ,EAAXY,KACpCkC,EAAalC,EAAKkC,WAAWC,MAAMZ,IAAI,SAAAa,GAAC,OAAIA,EAAEC,OAEpD,OACI9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACI/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAKZ,MAAM,8BACXpC,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACIjD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACIjD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,eACAjD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,gBAEJjD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACIjD,EAAAC,EAAAC,cAAA,oBAAYO,EAAKkC,WAAWO,WAA5B,mBACAlD,EAAAC,EAAAC,cAAA,OAAKM,UAAW2C,IAAOC,uBACnBpD,EAAAC,EAAAC,cAACmD,EAAD,CAAcjB,MAAM,SAASI,OAAQc,IAAYjB,OAAQ5B,EAAKsB,OAAOwB,WACrEvD,EAAAC,EAAAC,cAACmD,EAAD,CAAcjB,MAAM,YAAYI,OAAQgB,IAAenB,OAAQ5B,EAAKgD,WAAWF,WAC/EvD,EAAAC,EAAAC,cAACmD,EAAD,CAAcjB,MAAM,SAASI,OAAQkB,IAAYrB,OAAQ5B,EAAKkD,QAAQJ,WACtEvD,EAAAC,EAAAC,cAACmD,EAAD,CAAcjB,MAAM,gBAAgBI,OAAQoB,IAAUvB,OAAQ5B,EAAKoD,MAAMN,aAGjFvD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACIjD,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC4D,EAAD,CAAQrD,KAAMkC,QAShB,+CC3DlBoB,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAEO,SAASD,EAAKI,GACjB,OAAOC,IAAQD,EAAK,CAAEE,OAAQ,iBAAkBC,OAAO,uCCH3D,IAAAC,EAAAX,EAAA,GAAAY,EAAAZ,EAAAM,EAAAK,GAAAE,EAAAb,EAAA,IAAAc,EAAAd,EAAAM,EAAAO,GAAAb,EAAAC,EAAAC,EAAA,sBAAAY,EAAA5E,IAAA8D,EAAA,KAa2Be,IAAMC,cAAc,yBCb/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CjB,EAAAC,EAAAC,EAAA,sBAAA5D,IAAA,IAAAgF,EAAAtB,EAAA,KAEO,SAAS1D,EAATR,GACH,MAAO,OAAS,CADmFA,EAAtEE,YAAsEF,EAAzDC,WACDkC,IAAIkC,KAAMoB,KAAK,iFCmB7CC,UAjBU,SAAA1F,GAAiC,IAA9B2F,EAA8B3F,EAA9B2F,SAAUC,EAAoB5F,EAApB4F,cACpC,OAAKA,EAGEX,IAAM5E,cAAcwF,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,wCCPX9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA,IAAApB,EAAAX,EAAA,GAAAY,EAAAZ,EAAAM,EAAAK,GAAAqB,EAAAhC,EAAA,KAAAiC,EAAAjC,EAAA,KAAAkC,EAAAlC,EAAAM,EAAA2B,GAWaF,EAAkC,SAAAjG,GAAkB,IAAfqG,EAAerG,EAAfqG,SAC9C,OACIvB,EAAA1E,EAAAC,cAAAyE,EAAA1E,EAAAkG,SAAA,KACIxB,EAAA1E,EAAAC,cAAC6F,EAAA,EAAD,CAAM3F,GAAG,KACLuE,EAAA1E,EAAAC,cAAA,OAAKM,UAAW2C,IAAOiD,QAE1BF,sCCjBbnC,EAAAC,EAAAC,EAAA,sBAAAP,IAAA,IAAA2B,EAAAtB,EAAA,KAEO,SAASL,EAAW/B,GACvB,MAAO,WAAauC,YAAKvC,sCCDtB,SAASiC,EAAS/B,GACrB,OAAIA,EACO,SAAWA,EAEX,gBAJfkC,EAAAC,EAAAC,EAAA,sBAAAL,sCCFAG,EAAAC,EAAAC,EAAA,sBAAAoC,IAAA,IAAAhB,EAAAtB,EAAA,KAEO,SAASsC,EAAStG,GACrB,MAAO,SAAWmE,YAAKnE,sCCH3BgE,EAAAC,EAAAC,EAAA,sBAAAT,IAAA,IAAA6B,EAAAtB,EAAA,KAEO,SAASP,EAAc5B,GAC1B,MAAO,cAAgBsC,YAAKtC,uFCDzB,SAAS0B,EAAWvB,GACvB,MAAO,WAAamC,YAAKnC,gBCHtB,SAASuE,EAASC,GACrB,OAAOA,EAASC,MAAM,KAAK,GCD/BzC,EAAAC,EAAAC,EAAA,sBAAA5D,EAAA,IAAA0D,EAAAC,EAAAC,EAAA,sBAAAT,EAAA,IAAAO,EAAAC,EAAAC,EAAA,sBAAAP,EAAA,IAAAK,EAAAC,EAAAC,EAAA,sBAAAL,EAAA,IAAAG,EAAAC,EAAAC,EAAA,sBAAAX,IAAAS,EAAAC,EAAAC,EAAA,sBAAAqC,qFCsFeG,IAnEgC,SAAA5G,GAKzC,IAAA6G,EAAA7G,EAJJ8G,mBAII,IAAAD,EAJU,GAIVA,EAAAE,EAAA/G,EAHJgH,YAGI,IAAAD,EAHG,KAGHA,EAAAE,EAAAjH,EAFJkH,YAEI,IAAAD,EAFG,GAEHA,EADJ1E,EACIvC,EADJuC,MAEQ4E,EADJC,EAAAxG,KACIuG,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAAnH,EAAAC,cAACmH,EAAApH,EAAD,CACEqH,eAAgB,CACdT,QAEFzE,MAAOA,EACPmF,cAAa,QAAUP,EAAKG,aAAa/E,MACzC2E,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASrF,GAEX,CACEsF,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASrF,GAEX,CACEoF,KAAI,sBACJC,QAASP,IAEXU,OAAOb","file":"component---src-pages-index-tsx-0c6d355b8356d6d12d2b.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport classnames from \"classnames\";\nimport Downshift from \"downshift\";\nimport { backgroundPath } from \"../util\";\n\ninterface Level {\n    levelName: string;\n    gameNameUsa: string;\n    system: string;\n    developer: string;\n    year?: string;\n    series: string;\n}\n\ninterface SearchProps {\n    className?: string;\n    data: Level[];\n}\n\nconst LevelResult: React.FunctionComponent<Level> = ({ levelName, gameNameUsa }) => {\n    return (\n        <div>\n            <Link to={backgroundPath({ levelName, gameNameUsa })}>\n                {levelName} from {gameNameUsa}\n            </Link>\n        </div>\n    );\n};\n\nexport const Search: React.FunctionComponent<SearchProps> = ({ className, data }) => {\n    const classes = classnames(className);\n\n    function getMatchingLevels(term?: string): Level[] {\n        if (!term) {\n            return [];\n        }\n\n        term = term.toLowerCase();\n\n        return data.filter(level => {\n            return (\n                level.levelName.toLowerCase().indexOf(term) > -1 ||\n                level.gameNameUsa.toLowerCase().indexOf(term) > -1 ||\n                level.system.toLowerCase().indexOf(term) > -1 ||\n                level.developer.toLowerCase().indexOf(term) > -1 ||\n                (level.year && level.year.toString().indexOf(term) > -1) ||\n                level.series.indexOf(term) > 1\n            );\n        });\n    }\n\n    return (\n        <div className={classes}>\n            <Downshift onChange={item => alert(JSON.stringify(item))}>\n                {({ isOpen, getInputProps, inputValue }) => {\n                    return (\n                        <div>\n                            <input {...getInputProps()} />\n                            <ul>\n                                {isOpen &&\n                                    getMatchingLevels(inputValue).map(level => (\n                                        <li>\n                                            <LevelResult {...level} />\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                    );\n                }}\n            </Downshift>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Layout } from \"../components/layout\";\nimport { Search } from \"../components/search\";\nimport SEO from \"../components/seo\";\nimport { seriesPath, developerPath, systemPath, yearPath } from \"../util\";\n\nimport \"react-tabs/style/react-tabs.css\";\n\nimport styles from \"./index.module.css\";\n\nconst BrowseColumn: React.FunctionComponent = props => {\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <ul>\n                {props.values.map(v => (\n                    <li key={v}>\n                        <Link to={props.pathFn(v)}>{v}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nconst IndexPage: React.FunctionComponent = ({ data }) => {\n    const searchData = data.searchData.edges.map(e => e.node);\n\n    return (\n        <Layout>\n            <SEO title=\"Fighting Game Backgrounds\" />\n            <h1>FGBG</h1>\n            <Tabs>\n                <TabList>\n                    <Tab>Browse</Tab>\n                    <Tab>Search</Tab>\n                </TabList>\n                <TabPanel>\n                    <h2>Browse {data.searchData.totalCount} backgrounds by</h2>\n                    <div className={styles.browseColumnContainer}>\n                        <BrowseColumn title=\"Series\" pathFn={seriesPath} values={data.series.distinct} />\n                        <BrowseColumn title=\"Developer\" pathFn={developerPath} values={data.developers.distinct} />\n                        <BrowseColumn title=\"System\" pathFn={systemPath} values={data.systems.distinct} />\n                        <BrowseColumn title=\"Year Released\" pathFn={yearPath} values={data.years.distinct} />\n                    </div>\n                </TabPanel>\n                <TabPanel>\n                    <h2>Search</h2>\n                    <Search data={searchData} />\n                </TabPanel>\n            </Tabs>\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query {\n        searchData: allGoogleSheetLeveldataRow {\n            totalCount\n            edges {\n                node {\n                    levelName\n                    gameNameUsa\n                    system\n                    developer\n                    year\n                    series\n                }\n            }\n        }\n        developers: allGoogleSheetLeveldataRow {\n            distinct(field: developer)\n        }\n        years: allGoogleSheetLeveldataRow {\n            distinct(field: year)\n        }\n        systems: allGoogleSheetLeveldataRow {\n            distinct(field: system)\n        }\n        series: allGoogleSheetLeveldataRow {\n            distinct(field: series)\n        }\n    }\n`;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\nconst keyMap = {\n    PREV_LEVEL: \"ArrowLeft\",\n    NEXT_LEVEL: \"ArrowRight\",\n};\n\nexport const Layout: React.FunctionComponent = ({ children }) => {\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={styles.logo} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface SEOProps {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  title: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default SEO\n"],"sourceRoot":""}