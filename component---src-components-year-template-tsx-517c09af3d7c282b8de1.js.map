{"version":3,"sources":["webpack:///./src/components/yearTemplate.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/slug.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/backgroundPath.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/backgroundLink.tsx"],"names":["byGameName","a","b","gameNameUsa","localeCompare","query","YearTemplate","_ref","nodes","data","levels","edges","map","e","node","sort","grouped","groupBy","year","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_layout__WEBPACK_IMPORTED_MODULE_8__","Object","keys","gameName","Fragment","l","key","levelName","_components_backgroundLink__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","React","createContext","m","module","exports","require","default","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","str","slugify","remove","lower","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","join","Layout","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2___default","children","to","className","styles","logo","BackgroundLink","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_2__","newPage","entryPath","href","target"],"mappings":"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","file":"component---src-components-year-template-tsx-517c09af3d7c282b8de1.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { BackgroundLink } from \"../components/backgroundLink\";\nimport { Layout } from \"./layout\";\n\nfunction byGameName(a: { gameNameUsa: string }, b: { gameNameUsa: string }) {\n    return a.gameNameUsa.localeCompare(b.gameNameUsa);\n}\n\nconst YearTemplate: React.FunctionComponent = ({ data }) => {\n    const nodes = data.levels.edges.map(e => e.node).sort(byGameName);\n\n    const grouped = groupBy(nodes, \"gameNameUsa\");\n\n    const year = nodes[0].year;\n\n    return (\n        <Layout>\n            <pre>Year: {year}</pre>\n            <ul>\n                {Object.keys(grouped).map(gameName => (\n                    <>\n                        <h3>{gameName}</h3>\n                        <ul>\n                            {grouped[gameName].map(l => (\n                                <li key={l.levelName}>\n                                    <BackgroundLink {...l}>{l.levelName}</BackgroundLink>\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                ))}\n            </ul>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query($year: Int!) {\n        levels: allGoogleSheetLeveldataRow(filter: { year: { eq: $year } }) {\n            edges {\n                node {\n                    levelName\n                    gameNameUsa\n                    year\n                }\n            }\n        }\n    }\n`;\n\nexport default YearTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\nconst keyMap = {\n    PREV_LEVEL: \"ArrowLeft\",\n    NEXT_LEVEL: \"ArrowRight\",\n};\n\nexport const Layout: React.FunctionComponent = ({ children }) => {\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={styles.logo} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\ninterface BackgroundLinkProps {\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return <Link to={entryPath}>{children}</Link>;\n    }\n};\n"],"sourceRoot":""}