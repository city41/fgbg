{"version":3,"sources":["webpack:///./src/components/listTemplate.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/developerPath.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/levelListEntry.tsx","webpack:///./src/util/sort.ts"],"names":["getThumbnail","thumbnails","imageFileName","find","t","publicURL","indexOf","fileRoot","query","ListTemplate","_ref","data","_ref$pageContext","pageContext","listTypeValue","listType","levels","edges","map","e","node","byGame","groupBy","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_11__","className","styles","root","Object","keys","sort","byIgnoreThe","gameName","gameHeader","byLevelName","level","_levelListEntry__WEBPACK_IMPORTED_MODULE_10__","assign","listEntry","thumbnailData","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","gameNameUsa","levelName","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","Layout","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2___default","children","Fragment","to","logo","systemPath","system","yearPath","year","gamePath","developerPath","developer","BackgroundLink","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_3__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4___default","newPage","classes","classnames","entryPath","href","target","seriesPath","series","filename","split","LevelListEntry","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_backgroundLink__WEBPACK_IMPORTED_MODULE_3__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4___default","aspectRatio","height","width","imageContainer","style","paddingBottom","lowRes","src","dataUrl","alt","lazyImg","offsetBottom","highRes","b","localeCompare","thePrefix","aValue","replace","bValue"],"mappings":"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","file":"component---src-components-list-template-tsx-772949e1ad4db59d06f8.js","sourcesContent":["import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { fileRoot } from \"../util\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { Layout } from \"./layout\";\nimport { byLevelName, byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./listTemplate.module.css\";\n\ninterface Thumbnail {\n    publicURL: string;\n    width: number;\n    height: number;\n    dataUrl: string;\n}\n\nfunction getThumbnail(thumbnails: Thumbnail[], imageFileName: string): Thumbnail {\n    return thumbnails.find(t => t.publicURL.indexOf(fileRoot(imageFileName)) > -1);\n}\n\nconst ListTemplate: React.FunctionComponent = ({ data, pageContext: { listType, listTypeValue, thumbnails } }) => {\n    const levels = data.levels.edges.map(e => e.node);\n\n    const byGame = groupBy(levels, \"gameNameUsa\");\n\n    return (\n        <Layout>\n            <div className={styles.root}>\n                <h1>{listTypeValue}</h1>\n                <ul>\n                    {Object.keys(byGame)\n                        .sort(byIgnoreThe)\n                        .map(gameName => {\n                            return (\n                                <li>\n                                    <h2 className={styles.gameHeader}>{gameName}</h2>\n                                    <ul>\n                                        {byGame[gameName].sort(byLevelName).map(level => (\n                                            <li>\n                                                <LevelListEntry\n                                                    className={styles.listEntry}\n                                                    {...level}\n                                                    thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query($filter: googleSheetLeveldataRowFilterInput!) {\n        levels: allGoogleSheetLeveldataRow(filter: $filter) {\n            edges {\n                node {\n                    developer\n                    gameNameUsa\n                    levelName\n                    system\n                    imageFileName\n                }\n            }\n        }\n    }\n`;\n\nexport default ListTemplate;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\nconst keyMap = {\n    PREV_LEVEL: \"ArrowLeft\",\n    NEXT_LEVEL: \"ArrowRight\",\n};\n\nexport const Layout: React.FunctionComponent = ({ children }) => {\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={styles.logo} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\nexport const LevelListEntry: React.FunctionComponent = ({\n    className,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    developer,\n    system,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <BackgroundLink levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <div className={styles.imageContainer} style={{ paddingBottom: 200 * aspectRatio }}>\n                    <img\n                        className={styles.lowRes}\n                        src={thumbnailData.dataUrl}\n                        alt={`${levelName} from ${gameNameUsa}`}\n                    />\n                    <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                        <>\n                            <img\n                                className={styles.highRes}\n                                src={thumbnailData.publicURL}\n                                alt={`${levelName} from ${gameNameUsa}`}\n                            />\n                        </>\n                    </LazyLoad>\n                </div>\n                <div className={styles.levelName}>{levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n"],"sourceRoot":""}