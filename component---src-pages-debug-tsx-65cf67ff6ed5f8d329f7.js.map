{"version":3,"sources":["webpack:///./src/pages/debug.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/backgroundLink.tsx"],"names":["checkCycle","edges","neighbor","seenIds","forEach","e","count","id","Object","keys","length","JSON","stringify","IndexPage","_ref","data","nodes","allGoogleSheetLeveldataRow","map","node","bySystem","groupBy","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_9__","totalCount","sort","systemName","byGame","Fragment","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","slug","gameName","l","_components_backgroundLink__WEBPACK_IMPORTED_MODULE_8__","assign","newPage","levelName","query","__webpack_require__","d","__webpack_exports__","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","gameNameUsa","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","Layout","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_2___default","children","className","styles","logo","BackgroundLink","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_2__","entryPath","href","target"],"mappings":"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","file":"component---src-pages-debug-tsx-65cf67ff6ed5f8d329f7.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { BackgroundLink } from \"../components/backgroundLink\";\nimport { Layout } from \"../components/layout\";\nimport Image from \"../components/image\";\nimport { groupBy } from \"lodash\";\nimport { slug } from \"../util/slug\";\n\ninterface Node {\n    id: string;\n    levelName: string;\n    gameNameUsa: string;\n}\n\ninterface NeighborNode {\n    id: string;\n}\n\ninterface Edge {\n    node: Node;\n    next: NeighborNode;\n    previous: NeighborNode;\n}\n\ninterface IndexPageProps {\n    data: {\n        allGoogleSheetLeveldataRow: {\n            totalCount: number;\n            edges: Edge[];\n        };\n    };\n}\n\nfunction checkCycle(edges: Edge[], neighbor: \"next\" | \"previous\"): string {\n    const seenIds: { [uuid: string]: number } = {};\n\n    edges.forEach(e => {\n        if (!e[neighbor]) return;\n\n        const count = seenIds[e[neighbor].id] || 0;\n        seenIds[e[neighbor].id] = count + 1;\n    });\n\n    return `${neighbor} -- count: ${Object.keys(seenIds).length}\\n ${JSON.stringify(seenIds, null, 2)}`;\n}\n\nconst IndexPage: React.FunctionComponent<IndexPageProps> = ({ data }) => {\n    const nodes = data.allGoogleSheetLeveldataRow.edges.map(e => e.node);\n    const bySystem = groupBy(nodes, \"system\");\n\n    return (\n        <Layout>\n            <pre>FGBG ({data.allGoogleSheetLeveldataRow.totalCount} backgrounds)</pre>\n            <pre>{checkCycle(data.allGoogleSheetLeveldataRow.edges, \"next\")}</pre>\n            <pre>{checkCycle(data.allGoogleSheetLeveldataRow.edges, \"previous\")}</pre>\n            {Object.keys(bySystem)\n                .sort()\n                .map(systemName => {\n                    const byGame = groupBy(bySystem[systemName], \"gameNameUsa\");\n\n                    return (\n                        <>\n                            <Link to={slug(systemName)}>\n                                <h2>{systemName}</h2>\n                            </Link>\n                            <ul>\n                                {Object.keys(byGame)\n                                    .sort()\n                                    .map(gameName => (\n                                        <li>\n                                            <Link to={slug(gameName)}>{gameName}</Link>\n                                            <ul>\n                                                {byGame[gameName].map(l => (\n                                                    <li>\n                                                        <BackgroundLink newPage {...l}>\n                                                            {l.levelName}\n                                                        </BackgroundLink>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </li>\n                                    ))}\n                            </ul>\n                        </>\n                    );\n                })}\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query {\n        allGoogleSheetLeveldataRow {\n            totalCount\n            edges {\n                node {\n                    id\n                    levelName\n                    gameNameUsa\n                    system\n                }\n                next {\n                    id\n                }\n                previous {\n                    id\n                }\n            }\n        }\n    }\n`;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport logoSvg from \"../images/logo.svg\";\n\nimport styles from \"./layout.module.css\";\n\nconst keyMap = {\n    PREV_LEVEL: \"ArrowLeft\",\n    NEXT_LEVEL: \"ArrowRight\",\n};\n\nexport const Layout: React.FunctionComponent = ({ children }) => {\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={styles.logo} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\ninterface BackgroundLinkProps {\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return <Link to={entryPath}>{children}</Link>;\n    }\n};\n"],"sourceRoot":""}