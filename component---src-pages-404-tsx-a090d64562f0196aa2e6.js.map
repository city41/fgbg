{"version":3,"sources":["webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/pages/404.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./src/components/seo.tsx"],"names":["Header","_ref","_ref$siteTitle","siteTitle","react_default","a","createElement","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","data","_1499322071","Fragment","header","site","siteMetadata","title","paddingTop","NotFoundPage","layout","seo","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","keys","i","length","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-404-tsx-a090d64562f0196aa2e6.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface HeaderProps {\n  siteTitle?: string\n}\n\nconst Header: React.FunctionComponent<HeaderProps> = ({ siteTitle = \"\" }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\n\nconst Layout: React.FunctionComponent = ({ children }) => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <Header siteTitle={data.site.siteMetadata.title} />\n            <div\n                style={{\n                    margin: `0 auto`,\n                    maxWidth: 960,\n                    padding: `0px 1.0875rem 1.45rem`,\n                    paddingTop: 0,\n                }}\n            >\n                <main>{children}</main>\n            </div>\n        </>\n    );\n};\n\nexport default Layout;\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage: React.FunctionComponent = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface SEOProps {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  title: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default SEO\n"],"sourceRoot":""}