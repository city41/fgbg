{"version":3,"sources":["webpack:///./src/components/identifyEntry.tsx","webpack:///./src/pages/identify-backgrounds.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/lazyThumbnail.tsx","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/hooks/useCorrectionForm.ts"],"names":["IdentifyEntry","_ref","form","className","thumbnailData","unknownId","_useCorrectionForm","useCorrectionForm","window","location","pathname","undefined","handleInputChange","handleSubmit","inputs","hasSubmitted","classes","classnames","styles","root","react_default","a","createElement","thankYou","index_esm","inputContainer","htmlFor","readOnly","type","name","value","gameName","onChange","levelName","onClick","e","Fragment","lazyThumbnail","thumbnail","width","alt","IdentifyBackgroundsPage","data","identityDatas","unknowns","edges","map","node","childImageSharp","fixed","originalName","replace","dataUrl","base64","publicURL","src","original","height","fullImageUrl","unknownGifs","find","indexOf","layout","logoClassName","logo","identityEntriesContainer","identityData","identifyEntry_IdentifyEntry","identityEntry","key","query","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","React","createContext","m","require","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3___default","children","logoClasses","to","LazyThumbnail","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3__","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3___default","_ref$width","aspectRatio","style","paddingBottom","lowRes","highRes","lazyImg","offsetBottom","createHTML","this","$export","fails","defined","quot","string","tag","attribute","S","String","p1","NAME","exec","O","P","F","test","toLowerCase","split","mapToGoogle","system","developer","year","series","url","siteUrl","submissionType","initialState","keys","reduce","building","keyName","BASE_URL","currentPathname","initialData","_useState","useState","setInputs","_useState2","setHasSubmitted","event","preventDefault","fetch","queryString","inputKey","googleKey","encodeURIComponent","concat","getGoogleUrl","method","persist","_Object$assign","target"],"mappings":"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","file":"component---src-pages-identify-backgrounds-tsx-01d187efc427b4e1d0d2.js","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { FaSmileBeam } from \"react-icons/fa\";\nimport { LazyThumbnail } from \"./lazyThumbnail\";\nimport { useCorrectionForm } from \"../hooks/useCorrectionForm\";\n\nimport styles from \"./identifyEntry.module.css\";\n\ninterface IdentifyEntryProps {\n    className?: string;\n    thumbnailData: {\n        dataUrl: string;\n        publicURL: string;\n        width: number;\n        height: number;\n    };\n    unknownId: string;\n}\n\nexport const IdentifyEntry: React.FunctionComponent<IdentifyEntryProps> = ({ className, thumbnailData, unknownId }) => {\n    const { handleInputChange, handleSubmit, inputs, hasSubmitted }: any = useCorrectionForm(\n        typeof window !== \"undefined\" ? window.location.pathname : undefined,\n        \"identification\",\n        { unknownId }\n    );\n\n    const classes = classnames(styles.root, className);\n\n    let form;\n\n    if (hasSubmitted) {\n        form = (\n            <div className={styles.thankYou}>\n                thank you! <FaSmileBeam />\n            </div>\n        );\n    } else {\n        form = (\n            <div className={styles.form}>\n                <div className={styles.inputContainer}>\n                    <label htmlFor=\"gameName\">game name</label>\n                    <input\n                        readOnly={hasSubmitted}\n                        type=\"text\"\n                        name=\"gameName\"\n                        value={inputs.gameName}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={styles.inputContainer}>\n                    <label htmlFor=\"levelName\">level name</label>\n                    <input\n                        readOnly={hasSubmitted}\n                        type=\"text\"\n                        name=\"levelName\"\n                        value={inputs.levelName}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={styles.inputContainer}>\n                    <input\n                        type=\"submit\"\n                        value=\"submit\"\n                        onClick={e => {\n                            handleSubmit(e);\n                        }}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div className={classes}>\n                <LazyThumbnail\n                    className={styles.thumbnail}\n                    thumbnailData={thumbnailData}\n                    width={400}\n                    alt=\"unknown fighting game background\"\n                />\n                {form}\n            </div>\n        </>\n    );\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { IdentifyEntry } from \"../components/identifyEntry\";\nimport { IdentifyBackgroundsPageQuery } from \"../graphqlTypes\";\nimport { Layout } from \"../components/layout\";\n\nimport styles from \"./identify-backgrounds.module.css\";\n\ninterface IdentifyBackgroundsPageProps {\n    data: IdentifyBackgroundsPageQuery;\n}\n\nconst IdentifyBackgroundsPage: React.FunctionComponent<IdentifyBackgroundsPageProps> = ({ data }) => {\n    const identityDatas = data.unknowns.edges.map(e => {\n        const originalName = e.node.childImageSharp.fixed.originalName;\n        const unknownId = originalName.replace(\"_static.jpg\", \"\");\n\n        return {\n            unknownId,\n            thumbnailData: {\n                dataUrl: e.node.childImageSharp.dataUrl.base64,\n                publicURL: e.node.childImageSharp.fixed.src,\n                width: e.node.childImageSharp.original.width,\n                height: e.node.childImageSharp.original.height,\n            },\n            fullImageUrl: data.unknownGifs.edges.find(e => e.node.publicURL.indexOf(unknownId) > -1).node.publicURL,\n        };\n    });\n\n    return (\n        <Layout logoClassName={styles.logo}>\n            <div className={styles.root}>\n                <p>Do you know what games these backgrounds are from? Let us know!</p>\n                <div className={styles.identityEntriesContainer}>\n                    {identityDatas.map(identityData => (\n                        <IdentifyEntry\n                            className={styles.identityEntry}\n                            key={identityData.unknownId}\n                            unknownId={identityData.unknownId}\n                            thumbnailData={identityData.thumbnailData}\n                            fullImageUrl={identityData.fullImageUrl}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default IdentifyBackgroundsPage;\n\nexport const query = graphql`\n    query IdentifyBackgroundsPage {\n        unknowns: allFile(filter: { relativePath: { regex: \"/bgs/unknown/static/\" } }) {\n            edges {\n                node {\n                    relativePath\n                    publicURL\n                    childImageSharp {\n                        original {\n                            width\n                            height\n                        }\n                        fixed(height: 200) {\n                            src\n                            originalName\n                        }\n                        dataUrl: fixed(base64Width: 10) {\n                            base64\n                        }\n                    }\n                }\n            }\n        }\n        unknownGifs: allFile(filter: { relativePath: { regex: \"/bgs/unknown/full/\" } }) {\n            edges {\n                node {\n                    publicURL\n                }\n            }\n        }\n    }\n`;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./layout.module.css\";\n\ninterface LayoutProps {\n    logoClassName?: string;\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({ logoClassName, children }) => {\n    const logoClasses = classnames(styles.logo, logoClassName);\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={logoClasses} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\n\nimport styles from \"./lazyThumbnail.module.css\";\n\ninterface LazyThumbnailProps {\n    className?: string;\n    width?: number;\n    thumbnailData: {\n        dataUrl: string;\n        publicURL: string;\n        width: number;\n        height: number;\n    };\n    alt?: string;\n}\n\nexport const LazyThumbnail: React.FunctionComponent<LazyThumbnailProps> = ({\n    className,\n    width = 200,\n    thumbnailData,\n    alt,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <div className={classes} style={{ width, paddingBottom: width * aspectRatio }}>\n            <img className={styles.lowRes} src={thumbnailData.dataUrl} alt={alt} />\n            <noscript>\n                <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n            </noscript>\n            <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                <>\n                    <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n                </>\n            </LazyLoad>\n        </div>\n    );\n};\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import { useState } from \"react\";\n\nconst mapToGoogle = {\n    levelName: \"entry.1758812684\",\n    gameName: \"entry.1658808931\",\n    system: \"entry.2024056467\",\n    developer: \"entry.726710484\",\n    year: \"entry.906557948\",\n    series: \"entry.1788056905\",\n    url: \"entry.89449791\",\n    siteUrl: \"entry.36955456\",\n    submissionType: \"entry.1271839613\",\n    unknownId: \"entry.1564011080\",\n};\n\nconst initialState = Object.keys(mapToGoogle).reduce<Record<string, string>>((building, keyName) => {\n    building[keyName] = \"\";\n    return building;\n}, {});\n\nconst formId = \"1FAIpQLScSRFk3nVFwV0obvwZsd6H-oAG7SCXM7FsXZ6cU-YsyiqDzAQ\";\nconst BASE_URL = `https://docs.google.com/forms/d/e/${formId}/formResponse?`;\n\nfunction getGoogleUrl(inputs: any): string {\n    const queryParamArray = Object.keys(inputs).reduce<string[]>((building, inputKey) => {\n        const googleKey = mapToGoogle[inputKey as keyof typeof mapToGoogle];\n        const value = encodeURIComponent(inputs[inputKey]);\n\n        return building.concat(`${googleKey}=${value}`);\n    }, []);\n\n    const queryString = queryParamArray.join(\"&\");\n\n    return BASE_URL + queryString;\n}\nexport const useCorrectionForm = (currentPathname: string | undefined, submissionType: string, initialData = {}) => {\n    const [inputs, setInputs] = useState({\n        ...initialState,\n        ...initialData,\n        siteUrl: currentPathname || \"unknown\",\n        submissionType,\n    });\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    const handleSubmit = (event: React.MouseEvent<HTMLInputElement>) => {\n        if (event) {\n            event.preventDefault();\n        }\n\n        fetch(getGoogleUrl(inputs), {\n            method: \"POST\",\n        });\n\n        setHasSubmitted(true);\n    };\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.persist();\n        setInputs(inputs => ({ ...inputs, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        handleSubmit,\n        handleInputChange,\n        inputs,\n        hasSubmitted,\n    };\n};\n"],"sourceRoot":""}