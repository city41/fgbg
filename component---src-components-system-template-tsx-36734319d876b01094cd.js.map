{"version":3,"sources":["webpack:///./src/components/systemTemplate.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/slug.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/util/bgpath.ts"],"names":["byGameName","a","b","gameNameUsa","localeCompare","query","SystemTemplate","_ref","nodes","data","allGoogleSheetLeveldataRow","edges","map","e","node","sort","grouped","groupBy","systemName","system","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Object","keys","gameName","Fragment","l","key","levelName","_components_backgroundLink__WEBPACK_IMPORTED_MODULE_7__","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","str","slugify","remove","lower","backgroundLink_BackgroundLink","BackgroundLink","children","entryPath","join","bgpath","react_default","gatsby_browser_entry","to"],"mappings":"0MAKA,SAASA,EAAWC,EAA4BC,GAC5C,OAAOD,EAAEE,YAAYC,cAAcF,EAAEC,aAGzC,IAgCaE,EAAK,aAcHC,UA9CiC,SAAAC,GAAc,IACpDC,EADoDD,EAAXE,KAC5BC,2BAA2BC,MACzCC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,OACXC,KAAKf,GAEJgB,EAAUC,kBAAQT,EAAO,eAEzBU,EAAaV,EAAM,GAAGW,OAE5B,OACIC,EAAAnB,EAAAoB,cAAA,WACID,EAAAnB,EAAAoB,cAAA,WAAMH,GACNE,EAAAnB,EAAAoB,cAAA,UACKC,OAAOC,KAAKP,GAASJ,IAAI,SAAAY,GAAQ,OAC9BJ,EAAAnB,EAAAoB,cAAAD,EAAAnB,EAAAwB,SAAA,KACIL,EAAAnB,EAAAoB,cAAA,UAAKG,GACLJ,EAAAnB,EAAAoB,cAAA,UACKL,EAAQQ,GAAUZ,IAAI,SAAAc,GAAC,OACpBN,EAAAnB,EAAAoB,cAAA,MAAIM,IAAKD,EAAEE,WACPR,EAAAnB,EAAAoB,cAACQ,EAAA,EAAmBH,EACfA,EAAEE,0CC7B3C,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAvC,IAAAmC,EAAA,KAa2BO,IAAMC,cAAc,+ECShCC,UAjBU,SAAAtC,GAAiC,IAA9BuC,EAA8BvC,EAA9BuC,SAAUC,EAAoBxC,EAApBwC,cACpC,OAAKA,EAGEJ,IAAMtB,cAAc2B,IAApB1B,OAAA2B,OAAA,CACLH,WACAC,iBACGA,EAAcG,OALV,wCCPXd,EAAAK,EAAAC,EAAA,sBAAAS,IAAA,IAAAC,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAAE,EAAAc,GAEO,SAASD,EAAKG,GACjB,OAAOC,IAAQD,EAAK,CAAEE,OAAQ,iBAAkBC,OAAO,6ECH3DrB,EAAAK,EAAAC,EAAA,sBAAAgB,IASO,IAAMC,EAA+D,SAAApD,GAItE,IAHFqB,EAGErB,EAHFqB,UACAzB,EAEEI,EAFFJ,YACAyD,EACErD,EADFqD,SAEMC,ECZH,SAAAtD,GAOH,MAAO,CADRA,EALCJ,YAKDI,EAJCqB,WAKgChB,IAAIuC,KAAMW,KAAK,KDK7BC,CAAO,CAAE5D,cAAayB,cAIxC,OAFAgC,EAAWA,GAAezD,EAAP,MAAwByB,EAEpCoC,EAAA/D,EAAAoB,cAAC4C,EAAA,EAAD,CAAMC,GAAIL,GAAYD","file":"component---src-components-system-template-tsx-36734319d876b01094cd.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { BackgroundLink } from \"../components/backgroundLink\";\n\nfunction byGameName(a: { gameNameUsa: string }, b: { gameNameUsa: string }) {\n    return a.gameNameUsa.localeCompare(b.gameNameUsa);\n}\n\nconst SystemTemplate: React.FunctionComponent = ({ data }) => {\n    const nodes = data.allGoogleSheetLeveldataRow.edges\n        .map(e => e.node)\n        .sort(byGameName);\n\n    const grouped = groupBy(nodes, \"gameNameUsa\");\n\n    const systemName = nodes[0].system;\n\n    return (\n        <div>\n            <pre>{systemName}</pre>\n            <ul>\n                {Object.keys(grouped).map(gameName => (\n                    <>\n                        <h3>{gameName}</h3>\n                        <ul>\n                            {grouped[gameName].map(l => (\n                                <li key={l.levelName}>\n                                    <BackgroundLink {...l}>\n                                        {l.levelName}\n                                    </BackgroundLink>\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport const query = graphql`\n    query($system: String!) {\n        allGoogleSheetLeveldataRow(filter: { system: { eq: $system } }) {\n            edges {\n                node {\n                    levelName\n                    gameNameUsa\n                    system\n                }\n            }\n        }\n    }\n`;\n\nexport default SystemTemplate;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { bgpath } from \"../util/bgpath\";\n\ninterface BackgroundLinkProps {\n    levelName: string;\n    gameNameUsa: string;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    levelName,\n    gameNameUsa,\n    children,\n}) => {\n    const entryPath = bgpath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    return <Link to={entryPath}>{children}</Link>;\n};\n","import { slug } from \"./slug\";\n\nexport function bgpath({\n    gameNameUsa,\n    levelName,\n}: {\n    gameNameUsa: string;\n    levelName: string;\n}) {\n    return [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n"],"sourceRoot":""}