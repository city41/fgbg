{"version":3,"sources":["webpack:///./src/components/listTemplate.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/developerPath.ts","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/lazyThumbnail.tsx","webpack:///./src/util/sort.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/components/levelListEntry.tsx"],"names":["getThumbnail","thumbnails","imageFileName","find","t","publicURL","indexOf","fileRoot","query","ListTemplate","_ref","children","dontGroup","data","_ref$pageContext","pageContext","listTypeValue","levels","edges","map","e","node","byGame","groupBy","gameBody","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","level","key","levelName","_levelListEntry__WEBPACK_IMPORTED_MODULE_11__","Object","assign","linkClassName","styles","listEntryLink","className","listEntry","thumbnailData","keys","sort","byIgnoreThe","gameName","gameHeader","byLevelName","_layout__WEBPACK_IMPORTED_MODULE_12__","logoClassName","layoutLogo","react_helmet__WEBPACK_IMPORTED_MODULE_8__","root","levelCount","length","noscriptWarning","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","label","fullscreen","base","gameNameUsa","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","developerPath","developer","systemPath","system","yearPath","year","seriesPath","series","gamePath","filename","split","Layout","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3__","_layout_module_css__WEBPACK_IMPORTED_MODULE_3___default","logoClasses","classnames","logo","Fragment","to","LazyThumbnail","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3__","_lazyThumbnail_module_css__WEBPACK_IMPORTED_MODULE_3___default","_ref$width","width","alt","aspectRatio","height","classes","style","paddingBottom","lowRes","src","dataUrl","highRes","lazyImg","offsetBottom","b","localeCompare","thePrefix","aValue","replace","bValue","BackgroundLink","newPage","entryPath","react_default","href","target","gatsby_browser_entry","levelListEntry_LevelListEntry","LevelListEntry","linkClasses","backgroundLink","backgroundLink_BackgroundLink","lazyThumbnail"],"mappings":"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","file":"component---src-components-list-template-tsx-bfb76a20816046ace221.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport { groupBy } from \"lodash\";\nimport { fileRoot } from \"../util\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { Layout } from \"./layout\";\nimport { byLevelName, byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./listTemplate.module.css\";\n\ninterface Thumbnail {\n    publicURL: string;\n    width: number;\n    height: number;\n    dataUrl: string;\n}\n\nfunction getThumbnail(thumbnails: Thumbnail[], imageFileName: string): Thumbnail | undefined {\n    return thumbnails.find(t => t.publicURL.indexOf(fileRoot(imageFileName) + \"_thumb\") > -1);\n}\n\ninterface ListTemplateProps {\n    dontGroup?: boolean;\n    pageContext: {\n        listTypeValue: string;\n        thumbnails: Thumbnail[];\n    };\n    data: {\n        levels: {\n            edges: Array<{\n                node: {\n                    developer: string;\n                    gameNameUsa: string;\n                    levelName: string;\n                    system: string;\n                    imageFileName: string;\n                };\n            }>;\n        };\n    };\n}\n\nconst ListTemplate: React.FunctionComponent<ListTemplateProps> = ({\n    children,\n    dontGroup,\n    data,\n    pageContext: { listTypeValue, thumbnails },\n}) => {\n    const levels = data.levels.edges.map(e => e.node);\n\n    const byGame = groupBy(levels, \"gameNameUsa\");\n\n    const gameBody = dontGroup ? (\n        <ul>\n            {levels.map(level => (\n                <li key={level.levelName}>\n                    <LevelListEntry\n                        linkClassName={styles.listEntryLink}\n                        className={styles.listEntry}\n                        {...level}\n                        thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                    />\n                </li>\n            ))}\n        </ul>\n    ) : (\n        <ul>\n            {Object.keys(byGame)\n                .sort(byIgnoreThe)\n                .map(gameName => {\n                    return (\n                        <li key={gameName}>\n                            {gameName !== listTypeValue && <h2 className={styles.gameHeader}>{gameName}</h2>}\n                            <ul>\n                                {byGame[gameName].sort(byLevelName).map(level => (\n                                    <li key={level.levelName}>\n                                        <LevelListEntry\n                                            linkClassName={styles.listEntryLink}\n                                            className={styles.listEntry}\n                                            {...level}\n                                            thumbnailData={getThumbnail(thumbnails, level.imageFileName)}\n                                        />\n                                    </li>\n                                ))}\n                            </ul>\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n\n    return (\n        <Layout logoClassName={styles.layoutLogo}>\n            <Helmet>\n                <title>{listTypeValue} - FGBG</title>\n            </Helmet>\n            <div className={styles.root}>\n                <h1>\n                    {listTypeValue}{\" \"}\n                    <span className={styles.levelCount}>\n                        {children || (\n                            <span>\n                                {levels.length} background{levels.length !== 1 && \"s\"}\n                            </span>\n                        )}\n                    </span>\n                </h1>\n                <noscript>\n                    <div className={styles.noscriptWarning}>this page loads faster with JavaScript enabled</div>\n                </noscript>\n                {gameBody}\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query ListTemplate($filter: googleSheetLeveldataRowFilterInput!) {\n        levels: allGoogleSheetLeveldataRow(filter: $filter) {\n            edges {\n                node {\n                    developer\n                    gameNameUsa\n                    levelName\n                    system\n                    imageFileName\n                }\n            }\n        }\n    }\n`;\n\nexport default ListTemplate;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport interface BackgroundPathProps {\n    gameNameUsa: string;\n    levelName: string;\n}\n\nexport function backgroundPath({ gameNameUsa, levelName }: BackgroundPathProps, label?: string, fullscreen?: boolean) {\n    let base = \"/game:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n\n    if (label) {\n        base = [base, slug(label)].join(\"/\");\n    }\n\n    if (fullscreen) {\n        return [base, \"fullscreen\"].join(\"/\");\n    } else {\n        return base;\n    }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","export function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./slug\";\nexport * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./layout.module.css\";\n\ninterface LayoutProps {\n    logoClassName?: string;\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({ logoClassName, children }) => {\n    const logoClasses = classnames(styles.logo, logoClassName);\n    return (\n        <>\n            <Link to=\"/\">\n                <div className={logoClasses} />\n            </Link>\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\n\nimport styles from \"./lazyThumbnail.module.css\";\n\ninterface LazyThumbnailProps {\n    className?: string;\n    width?: number;\n    thumbnailData: {\n        dataUrl: string;\n        publicURL: string;\n        width: number;\n        height: number;\n    };\n    alt?: string;\n}\n\nexport const LazyThumbnail: React.FunctionComponent<LazyThumbnailProps> = ({\n    className,\n    width = 200,\n    thumbnailData,\n    alt,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <div className={classes} style={{ width, paddingBottom: width * aspectRatio }}>\n            <img className={styles.lowRes} src={thumbnailData.dataUrl} alt={alt} />\n            <noscript>\n                <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n            </noscript>\n            <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                <>\n                    <img className={styles.highRes} src={thumbnailData.publicURL} alt={alt} />\n                </>\n            </LazyLoad>\n        </div>\n    );\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { LazyThumbnail } from \"./lazyThumbnail\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\ninterface LevelListEntryProps {\n    className?: string;\n    // TODO type this\n    thumbnailData: any;\n    linkClassName?: string;\n    levelName: string;\n    gameNameUsa: string;\n}\n\nexport const LevelListEntry: React.FunctionComponent<LevelListEntryProps> = ({\n    className,\n    linkClassName,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n    const linkClasses = classnames(styles.backgroundLink, linkClassName);\n    return (\n        <BackgroundLink className={linkClasses} levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <LazyThumbnail thumbnailData={thumbnailData} alt={`${levelName} from ${gameNameUsa}`} />\n                <div className={styles.levelName}>{children || levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n"],"sourceRoot":""}