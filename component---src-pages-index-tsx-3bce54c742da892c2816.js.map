{"version":3,"sources":["webpack:///./src/components/search.tsx","webpack:///./src/components/indexHeader.tsx","webpack:///./src/components/browseColumn.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/developerPath.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/components/levelListEntry.tsx","webpack:///./src/util/sort.ts","webpack:///./src/components/seo.tsx","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts"],"names":["LevelResult","props","react_default","a","createElement","levelListEntry","Object","assign","className","styles","levelName","restOfText","gameNameUsa","system","Search","_ref","data","classes","classnames","root","downshift_esm","onChange","item","alert","JSON","stringify","_ref2","term","isOpen","getInputProps","inputValue","searchContainer","type","placeholder","resultsList","toLowerCase","filter","level","indexOf","developer","year","toString","series","map","search_LevelResult","IndexHeader","rootClasses","fgtClasses","titleText","fightingGameText","bgtClasses","backgroundsText","logo","BrowseColumn","title","values","v","key","gatsby_browser_entry","to","pathFn","IndexPage","searchData","edges","e","node","thumbnails","flattenedThumbnails","t","width","childImageSharp","original","height","dataUrl","fixed","base64","randomThumbnailIndex","Math","floor","random","length","bgImageUrl","publicURL","totalSearchData","s","thumbnail","find","relativePath","fileRoot","imageFileName","thumbnailData","Fragment","blur","style","backgroundImage","content","seo","indexHeader_IndexHeader","header","search_Search","search","totalCount","browseColumnContainer","browseColumn_BrowseColumn","seriesPath","distinct","sort","byIgnoreThe","developerPath","developers","systemPath","systems","yearPath","years","query","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","backgroundPath","_slug__WEBPACK_IMPORTED_MODULE_0__","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","gamePath","BackgroundLink","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_3__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4___default","newPage","children","entryPath","href","target","LevelListEntry","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_backgroundLink__WEBPACK_IMPORTED_MODULE_3__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4___default","aspectRatio","backgroundLink","imageContainer","paddingBottom","lowRes","src","alt","highRes","lazyImg","offsetBottom","byLevelName","b","localeCompare","thePrefix","aValue","replace","bValue","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","author","concat","filename","split"],"mappings":"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","file":"component---src-pages-index-tsx-3bce54c742da892c2816.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport classnames from \"classnames\";\nimport Downshift from \"downshift\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { backgroundPath } from \"../util\";\n\nimport styles from \"./search.module.css\";\n\ninterface Level {\n    levelName: string;\n    gameNameUsa: string;\n    system: string;\n    developer: string;\n    year?: string;\n    series: string;\n}\n\ninterface SearchProps {\n    className?: string;\n    data: Level[];\n}\n\nconst LevelResult: React.FunctionComponent<Level> = props => {\n    return (\n        <div>\n            <LevelListEntry className={styles.levelListEntry} {...props}>\n                <span className={styles.levelName}>{props.levelName}</span>{\" \"}\n                <span className={styles.restOfText}>\n                    from {props.gameNameUsa}, {props.system}\n                </span>\n            </LevelListEntry>\n        </div>\n    );\n};\n\nexport const Search: React.FunctionComponent<SearchProps> = ({ className, data }) => {\n    const classes = classnames(styles.root, className);\n\n    function getMatchingLevels(term?: string): Level[] {\n        if (!term) {\n            return [];\n        }\n\n        term = term.toLowerCase();\n\n        return data.filter(level => {\n            return (\n                level.levelName.toLowerCase().indexOf(term) > -1 ||\n                level.gameNameUsa.toLowerCase().indexOf(term) > -1 ||\n                level.system.toLowerCase().indexOf(term) > -1 ||\n                level.developer.toLowerCase().indexOf(term) > -1 ||\n                (level.year && level.year.toString().indexOf(term) > -1) ||\n                level.series.indexOf(term) > 1\n            );\n        });\n    }\n\n    return (\n        <div className={classes}>\n            <Downshift onChange={item => alert(JSON.stringify(item))}>\n                {({ isOpen, getInputProps, inputValue }) => {\n                    return (\n                        <div className={styles.searchContainer}>\n                            <input {...getInputProps()} type=\"search\" placeholder=\"search for a background...\" />\n                            <ul className={styles.resultsList}>\n                                {isOpen &&\n                                    getMatchingLevels(inputValue).map(level => (\n                                        <li>\n                                            <LevelResult {...level} />\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                    );\n                }}\n            </Downshift>\n        </div>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./indexHeader.module.css\";\n\ninterface IndexHeaderProps {\n    className?: string;\n}\n\nexport const IndexHeader: React.FunctionComponent<IndexHeaderProps> = ({ className }) => {\n    const rootClasses = classnames(styles.root, className);\n    const fgtClasses = classnames(styles.titleText, styles.fightingGameText);\n    const bgtClasses = classnames(styles.titleText, styles.backgroundsText);\n\n    return (\n        <div className={rootClasses}>\n            <div className={styles.logo} />\n            <div className={fgtClasses}>fighting game</div>\n            <div className={bgtClasses}>backgrounds</div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./browseColumn.module.css\";\n\nexport const BrowseColumn: React.FunctionComponent = props => {\n    return (\n        <div className={styles.root}>\n            <h3>{props.title}</h3>\n            <ul>\n                {props.values.map(v => (\n                    <li key={v}>\n                        <Link to={props.pathFn(v)}>{v}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Search } from \"../components/search\";\nimport { IndexHeader } from \"../components/indexHeader\";\nimport { BrowseColumn } from \"../components/browseColumn\";\nimport SEO from \"../components/seo\";\nimport { fileRoot, seriesPath, developerPath, systemPath, yearPath } from \"../util\";\nimport { byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./index.module.css\";\n\nconst IndexPage: React.FunctionComponent = ({ data }) => {\n    const searchData = data.searchData.edges.map(e => e.node);\n    const thumbnails = data.thumbnails.edges.map(e => e.node);\n    const flattenedThumbnails = thumbnails.map(t => {\n        return {\n            ...t,\n            width: t.childImageSharp.original.width,\n            height: t.childImageSharp.original.height,\n            dataUrl: t.childImageSharp.fixed.base64,\n        };\n    });\n\n    const randomThumbnailIndex = Math.floor(Math.random() * thumbnails.length);\n    const bgImageUrl = flattenedThumbnails[randomThumbnailIndex].publicURL;\n\n    const totalSearchData = searchData.map(s => {\n        const thumbnail = flattenedThumbnails.find(t => t.relativePath.indexOf(fileRoot(s.imageFileName)) > -1);\n\n        return {\n            ...s,\n            thumbnailData: thumbnail,\n        };\n    });\n\n    return (\n        <>\n            <div className={styles.blur} style={{ backgroundImage: `url(${bgImageUrl})` }} />\n            <div className={styles.root}>\n                <div className={styles.content}>\n                    <SEO title=\"Fighting Game Backgrounds\" />\n                    <IndexHeader className={styles.header} />\n                    <Search className={styles.search} data={totalSearchData} />\n                    <p>or browse {data.searchData.totalCount} backgrounds by...</p>\n                    <div className={styles.browseColumnContainer}>\n                        <BrowseColumn\n                            title=\"series\"\n                            pathFn={seriesPath}\n                            values={data.series.distinct.sort(byIgnoreThe)}\n                        />\n                        <BrowseColumn title=\"developer\" pathFn={developerPath} values={data.developers.distinct} />\n                        <BrowseColumn title=\"system\" pathFn={systemPath} values={data.systems.distinct} />\n                        <BrowseColumn title=\"year released\" pathFn={yearPath} values={data.years.distinct} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query {\n        searchData: allGoogleSheetLeveldataRow {\n            totalCount\n            edges {\n                node {\n                    levelName\n                    gameNameUsa\n                    system\n                    developer\n                    year\n                    series\n                    imageFileName\n                }\n            }\n        }\n        developers: allGoogleSheetLeveldataRow {\n            distinct(field: developer)\n        }\n        years: allGoogleSheetLeveldataRow {\n            distinct(field: year)\n        }\n        systems: allGoogleSheetLeveldataRow {\n            distinct(field: system)\n        }\n        series: allGoogleSheetLeveldataRow {\n            distinct(field: series)\n        }\n        thumbnails: allFile(filter: { relativePath: { regex: \"/bgs/thumb/\" } }) {\n            edges {\n                node {\n                    relativePath\n                    publicURL\n                    childImageSharp {\n                        original {\n                            width\n                            height\n                        }\n                        fixed(base64Width: 10) {\n                            base64\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\nexport const LevelListEntry: React.FunctionComponent = ({\n    className,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    developer,\n    system,\n    children,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <BackgroundLink className={styles.backgroundLink} levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <div className={styles.imageContainer} style={{ paddingBottom: 200 * aspectRatio }}>\n                    <img\n                        className={styles.lowRes}\n                        src={thumbnailData.dataUrl}\n                        alt={`${levelName} from ${gameNameUsa}`}\n                    />\n                    <noscript>\n                        <img\n                            className={styles.highRes}\n                            src={thumbnailData.publicURL}\n                            alt={`${levelName} from ${gameNameUsa}`}\n                        />\n                    </noscript>\n                    <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                        <>\n                            <img\n                                className={styles.highRes}\n                                src={thumbnailData.publicURL}\n                                alt={`${levelName} from ${gameNameUsa}`}\n                            />\n                        </>\n                    </LazyLoad>\n                </div>\n                <div className={styles.levelName}>{children || levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface SEOProps {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  title: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default SEO\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n"],"sourceRoot":""}