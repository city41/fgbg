{"version":3,"sources":["webpack:///./src/components/search.tsx","webpack:///./src/components/indexHeader.tsx","webpack:///./src/components/browseColumn.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/util/slug.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/util/backgroundPath.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/util/systemPath.ts","webpack:///./src/util/yearPath.ts","webpack:///./src/util/gamePath.ts","webpack:///./src/util/developerPath.ts","webpack:///./src/components/backgroundLink.tsx","webpack:///./src/util/seriesPath.ts","webpack:///./src/util/fileRoot.ts","webpack:///./src/util/index.ts","webpack:///./src/components/levelListEntry.tsx","webpack:///./src/util/sort.ts","webpack:///./src/components/seo.tsx"],"names":["LevelResult","props","react_default","a","createElement","gatsby_browser_entry","to","backgroundPath","levelListEntry","Search","_ref","className","data","classes","classnames","styles","root","downshift_esm","onChange","item","alert","JSON","stringify","_ref2","term","isOpen","getInputProps","inputValue","searchContainer","Object","assign","placeholder","resultsList","toLowerCase","filter","level","levelName","indexOf","gameNameUsa","system","developer","year","toString","series","map","search_LevelResult","IndexHeader","rootClasses","fgtClasses","titleText","fightingGameText","bgtClasses","backgroundsText","logo","BrowseColumn","title","values","v","key","pathFn","IndexPage","searchData","edges","e","node","flattenedThumbnails","thumbnails","t","width","childImageSharp","original","height","dataUrl","fixed","base64","totalSearchData","s","thumbnail","find","relativePath","fileRoot","imageFileName","thumbnailData","content","seo","indexHeader_IndexHeader","header","search_Search","search","totalCount","browseColumnContainer","browseColumn_BrowseColumn","seriesPath","distinct","sort","byIgnoreThe","developerPath","developers","systemPath","systems","yearPath","years","query","__webpack_require__","d","__webpack_exports__","slug","slugify__WEBPACK_IMPORTED_MODULE_0__","slugify__WEBPACK_IMPORTED_MODULE_0___default","n","str","slugify","remove","lower","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","m","module","exports","require","default","_slug__WEBPACK_IMPORTED_MODULE_0__","join","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","gamePath","BackgroundLink","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_util_backgroundPath__WEBPACK_IMPORTED_MODULE_3__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4__","_backgroundLink_module_css__WEBPACK_IMPORTED_MODULE_4___default","newPage","children","entryPath","href","target","filename","split","LevelListEntry","react_lazy_load__WEBPACK_IMPORTED_MODULE_2__","react_lazy_load__WEBPACK_IMPORTED_MODULE_2___default","_backgroundLink__WEBPACK_IMPORTED_MODULE_3__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4__","_levelListEntry_module_css__WEBPACK_IMPORTED_MODULE_4___default","aspectRatio","imageContainer","style","paddingBottom","lowRes","src","alt","highRes","publicURL","lazyImg","offsetBottom","Fragment","byLevelName","b","localeCompare","thePrefix","aValue","replace","bValue","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","author","concat"],"mappings":"4OAuBMA,EAA8C,SAAAC,GAChD,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIC,YAAeN,IACrBC,EAAAC,EAAAC,cAACI,EAAA,EAAmBP,MAMvBQ,EAA+C,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,UAAWC,EAAWF,EAAXE,KAChEC,EAAUC,IAAWC,IAAOC,KAAML,GAqBxC,OACIT,EAAAC,EAAAC,cAAA,OAAKO,UAAWE,GACZX,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAWC,SAAU,SAAAC,GAAI,OAAIC,MAAMC,KAAKC,UAAUH,MAC7C,SAAAI,GAA2C,IAtB7BC,EAsBXC,EAAwCF,EAAxCE,OAAQC,EAAgCH,EAAhCG,cAAeC,EAAiBJ,EAAjBI,WACvB,OACIzB,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAOa,iBACnB1B,EAAAC,EAAAC,cAAA,QAAAyB,OAAAC,OAAA,GAAWJ,IAAX,CAA4BK,YAAY,gCACxC7B,EAAAC,EAAAC,cAAA,MAAIO,UAAWI,IAAOiB,aACjBP,IA3BFD,EA4BuBG,EA3BzCH,GAILA,EAAOA,EAAKS,cAELrB,EAAKsB,OAAO,SAAAC,GACf,OACIA,EAAMC,UAAUH,cAAcI,QAAQb,IAAS,GAC/CW,EAAMG,YAAYL,cAAcI,QAAQb,IAAS,GACjDW,EAAMI,OAAON,cAAcI,QAAQb,IAAS,GAC5CW,EAAMK,UAAUP,cAAcI,QAAQb,IAAS,GAC9CW,EAAMM,MAAQN,EAAMM,KAAKC,WAAWL,QAAQb,IAAS,GACtDW,EAAMQ,OAAON,QAAQb,GAAQ,KAZ1B,IA0B+CoB,IAAI,SAAAT,GAAK,OACnCjC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACyC,EAAgBV,8BCzDhDW,EAAyD,SAAApC,GAAmB,IAAhBC,EAAgBD,EAAhBC,UAC/DoC,EAAcjC,IAAWC,IAAOC,KAAML,GACtCqC,EAAalC,IAAWC,IAAOkC,UAAWlC,IAAOmC,kBACjDC,EAAarC,IAAWC,IAAOkC,UAAWlC,IAAOqC,iBAEvD,OACIlD,EAAAC,EAAAC,cAAA,OAAKO,UAAWoC,GACZ7C,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAOsC,OACvBnD,EAAAC,EAAAC,cAAA,OAAKO,UAAWqC,GAAhB,iBACA9C,EAAAC,EAAAC,cAAA,OAAKO,UAAWwC,GAAhB,iDCbCG,EAAwC,SAAArD,GACjD,OACIC,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAOC,MACnBd,EAAAC,EAAAC,cAAA,UAAKH,EAAMsD,OACXrD,EAAAC,EAAAC,cAAA,UACKH,EAAMuD,OAAOZ,IAAI,SAAAa,GAAC,OACfvD,EAAAC,EAAAC,cAAA,MAAIsD,IAAKD,GACLvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIL,EAAM0D,OAAOF,IAAKA,iFCsCrCG,UAvC4B,SAAAlD,GAAc,IAAXE,EAAWF,EAAXE,KACpCiD,EAAajD,EAAKiD,WAAWC,MAAMlB,IAAI,SAAAmB,GAAC,OAAIA,EAAEC,OAE9CC,EADarD,EAAKsD,WAAWJ,MAAMlB,IAAI,SAAAmB,GAAC,OAAIA,EAAEC,OACbpB,IAAI,SAAAuB,GACvC,OAAAtC,OAAAC,OAAA,GACOqC,EADP,CAEIC,MAAOD,EAAEE,gBAAgBC,SAASF,MAClCG,OAAQJ,EAAEE,gBAAgBC,SAASC,OACnCC,QAASL,EAAEE,gBAAgBI,MAAMC,WAInCC,EAAkBd,EAAWjB,IAAI,SAAAgC,GACnC,IAAMC,EAAYZ,EAAoBa,KAAK,SAAAX,GAAC,OAAIA,EAAEY,aAAa1C,QAAQ2C,YAASJ,EAAEK,iBAAmB,IAErG,OAAApD,OAAAC,OAAA,GACO8C,EADP,CAEIM,cAAeL,MAIvB,OACI3E,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAOC,MACnBd,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAOoE,SACnBjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAK7B,MAAM,8BACXrD,EAAAC,EAAAC,cAACiF,EAAD,CAAa1E,UAAWI,IAAOuE,SAC/BpF,EAAAC,EAAAC,cAACmF,EAAD,CAAQ5E,UAAWI,IAAOyE,OAAQ5E,KAAM+D,IACxCzE,EAAAC,EAAAC,cAAA,sBAAcQ,EAAKiD,WAAW4B,WAA9B,mBACAvF,EAAAC,EAAAC,cAAA,OAAKO,UAAWI,IAAO2E,uBACnBxF,EAAAC,EAAAC,cAACuF,EAAD,CAAcpC,MAAM,SAASI,OAAQiC,IAAYpC,OAAQ5C,EAAK+B,OAAOkD,SAASC,KAAKC,OACnF7F,EAAAC,EAAAC,cAACuF,EAAD,CAAcpC,MAAM,YAAYI,OAAQqC,IAAexC,OAAQ5C,EAAKqF,WAAWJ,WAC/E3F,EAAAC,EAAAC,cAACuF,EAAD,CAAcpC,MAAM,SAASI,OAAQuC,IAAY1C,OAAQ5C,EAAKuF,QAAQN,WACtE3F,EAAAC,EAAAC,cAACuF,EAAD,CAAcpC,MAAM,gBAAgBI,OAAQyC,IAAU5C,OAAQ5C,EAAKyF,MAAMR,eAhC7F,IAyCaS,EAAK,+CCpDlBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAEO,SAASD,EAAKI,GACjB,OAAOC,IAAQD,EAAK,CAAEE,OAAQ,iBAAkBC,OAAO,uCCH3D,IAAAC,EAAAX,EAAA,GAAAY,EAAAZ,EAAAM,EAAAK,GAAAE,EAAAb,EAAA,IAAAc,EAAAd,EAAAM,EAAAO,GAAAb,EAAAC,EAAAC,EAAA,sBAAAY,EAAAlH,IAAAoG,EAAA,KAa2Be,IAAMC,cAAc,yBCb/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CjB,EAAAC,EAAAC,EAAA,sBAAAlG,IAAA,IAAAsH,EAAAtB,EAAA,KAEO,SAAShG,EAATG,GACH,MAAO,OAAS,CADmFA,EAAtE4B,YAAsE5B,EAAzD0B,WACDQ,IAAI8D,KAAMoB,KAAK,iFCmB7CC,UAjBU,SAAArH,GAAiC,IAA9BsH,EAA8BtH,EAA9BsH,SAAUC,EAAoBvH,EAApBuH,cACpC,OAAKA,EAGEX,IAAMlH,cAAc8H,IAApBrG,OAAAC,OAAA,CACLkG,WACAC,iBACGA,EAAcE,OALV,wCCPX5B,EAAAC,EAAAC,EAAA,sBAAAP,IAAA,IAAA2B,EAAAtB,EAAA,KAEO,SAASL,EAAW3D,GACvB,MAAO,WAAamE,YAAKnE,sCCDtB,SAAS6D,EAAS3D,GACrB,OAAIA,EACO,SAAWA,EAEX,gBAJf8D,EAAAC,EAAAC,EAAA,sBAAAL,sCCFAG,EAAAC,EAAAC,EAAA,sBAAA2B,IAAA,IAAAP,EAAAtB,EAAA,KAEO,SAAS6B,EAAS9F,GACrB,MAAO,SAAWoE,YAAKpE,sCCH3BiE,EAAAC,EAAAC,EAAA,sBAAAT,IAAA,IAAA6B,EAAAtB,EAAA,KAEO,SAASP,EAAcxD,GAC1B,MAAO,cAAgBkE,YAAKlE,sCCHhC+D,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA,IAAAnB,EAAAX,EAAA,GAAAY,EAAAZ,EAAAM,EAAAK,GAAAoB,EAAA/B,EAAA,KAAAgC,EAAAhC,EAAAM,EAAAyB,GAAAE,EAAAjC,EAAA,KAAAkC,EAAAlC,EAAA,KAAAmC,EAAAnC,EAAA,KAAAoC,EAAApC,EAAAM,EAAA6B,GAcaL,EAA+D,SAAA3H,GAMtE,IALFC,EAKED,EALFC,UACAyB,EAIE1B,EAJF0B,UACAE,EAGE5B,EAHF4B,YACAsG,EAEElI,EAFFkI,QACAC,EACEnI,EADFmI,SAEMhI,EAAUC,IAAWC,IAAOC,KAAML,GAElCmI,EAAYvI,YAAe,CAAE+B,cAAaF,cAIhD,OAFAyG,EAAWA,GAAevG,EAAP,MAAwBF,EAEvCwG,EAEIzB,EAAAhH,EAAAC,cAAA,KAAGO,UAAWE,EAASkI,KAAMD,EAAWE,OAAO,UAC1CH,GAKL1B,EAAAhH,EAAAC,cAACoI,EAAA,EAAD,CAAM7H,UAAWE,EAASP,GAAIwI,GACzBD,uFClCV,SAASjD,EAAWjD,GACvB,MAAO,WAAa+D,YAAK/D,gBCHtB,SAASqC,EAASiE,GACrB,OAAOA,EAASC,MAAM,KAAK,GCD/B3C,EAAAC,EAAAC,EAAA,sBAAAlG,EAAA,IAAAgG,EAAAC,EAAAC,EAAA,sBAAAT,EAAA,IAAAO,EAAAC,EAAAC,EAAA,sBAAAP,EAAA,IAAAK,EAAAC,EAAAC,EAAA,sBAAAL,EAAA,IAAAG,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAzB,sCCAAuB,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA,IAAAjC,EAAAX,EAAA,GAAAY,EAAAZ,EAAAM,EAAAK,GAAAoB,EAAA/B,EAAA,KAAAgC,EAAAhC,EAAAM,EAAAyB,GAAAc,EAAA7C,EAAA,KAAA8C,EAAA9C,EAAAM,EAAAuC,GAAAE,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAAM,EAAA0C,GAOaJ,EAA0C,SAAAzI,GAOjD,IANFC,EAMED,EANFC,UACAuE,EAKExE,EALFwE,cACA9C,EAIE1B,EAJF0B,UACAE,EAGE5B,EAHF4B,YAIMmH,GADJ/I,EAFF8B,UAEE9B,EADF6B,OAEoB2C,EAAcX,OAASW,EAAcd,OACnDvD,EAAUC,IAAWC,IAAOC,KAAML,GAExC,OACIwG,EAAAhH,EAAAC,cAACkJ,EAAA,EAAD,CAAgBlH,UAAWA,EAAWE,YAAaA,GAC/C6E,EAAAhH,EAAAC,cAAA,OAAKO,UAAWE,GACZsG,EAAAhH,EAAAC,cAAA,OAAKO,UAAWI,IAAO2I,eAAgBC,MAAO,CAAEC,cAAe,IAAMH,IACjEtC,EAAAhH,EAAAC,cAAA,OACIO,UAAWI,IAAO8I,OAClBC,IAAK5E,EAAcV,QACnBuF,IAAQ3H,EAAL,SAAuBE,IAE9B6E,EAAAhH,EAAAC,cAAA,gBACI+G,EAAAhH,EAAAC,cAAA,OACIO,UAAWI,IAAOiJ,QAClBF,IAAK5E,EAAc+E,UACnBF,IAAQ3H,EAAL,SAAuBE,KAGlC6E,EAAAhH,EAAAC,cAACiJ,EAAAlJ,EAAD,CAAUQ,UAAWI,IAAOmJ,QAASC,aAAc,KAC/ChD,EAAAhH,EAAAC,cAAA+G,EAAAhH,EAAAiK,SAAA,KACIjD,EAAAhH,EAAAC,cAAA,OACIO,UAAWI,IAAOiJ,QAClBF,IAAK5E,EAAc+E,UACnBF,IAAQ3H,EAAL,SAAuBE,OAK1C6E,EAAAhH,EAAAC,cAAA,OAAKO,UAAWI,IAAOqB,WAAYA,8GC5C5C,SAASiI,EAAYlK,EAA0BmK,GAClD,OAAOnK,EAAEiC,UAAUmI,cAAcD,EAAElI,WAGvC,IAAMoI,EAAY,QAEX,SAASzE,EAAY5F,EAAWmK,GACnC,IAAMG,EAAStK,EAAEuK,QAAQF,EAAW,IAC9BG,EAASL,EAAEI,QAAQF,EAAW,IAEpC,OAAOC,EAAOF,cAAcI,qFC4EjBC,IAnEgC,SAAAlK,GAKzC,IAAAmK,EAAAnK,EAJJoK,mBAII,IAAAD,EAJU,GAIVA,EAAAE,EAAArK,EAHJsK,YAGI,IAAAD,EAHG,KAGHA,EAAAE,EAAAvK,EAFJwK,YAEI,IAAAD,EAFG,GAEHA,EADJ1H,EACI7C,EADJ6C,MAEQ4H,EADJC,EAAAxK,KACIuK,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAApL,EAAAC,cAACoL,EAAArL,EAAD,CACEsL,eAAgB,CACdT,QAEFzH,MAAOA,EACPmI,cAAa,QAAUP,EAAKG,aAAa/H,MACzC2H,KAAM,CACJ,CACES,KAAI,cACJxG,QAASkG,GAEX,CACEO,SAAQ,WACRzG,QAAS5B,GAEX,CACEqI,SAAQ,iBACRzG,QAASkG,GAEX,CACEO,SAAQ,UACRzG,QAAO,WAET,CACEwG,KAAI,eACJxG,QAAO,WAET,CACEwG,KAAI,kBACJxG,QAASgG,EAAKG,aAAaO,QAE7B,CACEF,KAAI,gBACJxG,QAAS5B,GAEX,CACEoI,KAAI,sBACJxG,QAASkG,IAEXS,OAAOZ","file":"component---src-pages-index-tsx-c12f0f4f38a82acc6fe7.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport classnames from \"classnames\";\nimport Downshift from \"downshift\";\nimport { LevelListEntry } from \"./levelListEntry\";\nimport { backgroundPath } from \"../util\";\n\nimport styles from \"./search.module.css\";\n\ninterface Level {\n    levelName: string;\n    gameNameUsa: string;\n    system: string;\n    developer: string;\n    year?: string;\n    series: string;\n}\n\ninterface SearchProps {\n    className?: string;\n    data: Level[];\n}\n\nconst LevelResult: React.FunctionComponent<Level> = props => {\n    return (\n        <div>\n            <Link to={backgroundPath(props)}>\n                <LevelListEntry {...props} />\n            </Link>\n        </div>\n    );\n};\n\nexport const Search: React.FunctionComponent<SearchProps> = ({ className, data }) => {\n    const classes = classnames(styles.root, className);\n\n    function getMatchingLevels(term?: string): Level[] {\n        if (!term) {\n            return [];\n        }\n\n        term = term.toLowerCase();\n\n        return data.filter(level => {\n            return (\n                level.levelName.toLowerCase().indexOf(term) > -1 ||\n                level.gameNameUsa.toLowerCase().indexOf(term) > -1 ||\n                level.system.toLowerCase().indexOf(term) > -1 ||\n                level.developer.toLowerCase().indexOf(term) > -1 ||\n                (level.year && level.year.toString().indexOf(term) > -1) ||\n                level.series.indexOf(term) > 1\n            );\n        });\n    }\n\n    return (\n        <div className={classes}>\n            <Downshift onChange={item => alert(JSON.stringify(item))}>\n                {({ isOpen, getInputProps, inputValue }) => {\n                    return (\n                        <div className={styles.searchContainer}>\n                            <input {...getInputProps()} placeholder=\"search for a background...\" />\n                            <ul className={styles.resultsList}>\n                                {isOpen &&\n                                    getMatchingLevels(inputValue).map(level => (\n                                        <li>\n                                            <LevelResult {...level} />\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                    );\n                }}\n            </Downshift>\n        </div>\n    );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./indexHeader.module.css\";\n\ninterface IndexHeaderProps {\n    className?: string;\n}\n\nexport const IndexHeader: React.FunctionComponent<IndexHeaderProps> = ({ className }) => {\n    const rootClasses = classnames(styles.root, className);\n    const fgtClasses = classnames(styles.titleText, styles.fightingGameText);\n    const bgtClasses = classnames(styles.titleText, styles.backgroundsText);\n\n    return (\n        <div className={rootClasses}>\n            <div className={styles.logo} />\n            <div className={fgtClasses}>fighting game</div>\n            <div className={bgtClasses}>backgrounds</div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./browseColumn.module.css\";\n\nexport const BrowseColumn: React.FunctionComponent = props => {\n    return (\n        <div className={styles.root}>\n            <h3>{props.title}</h3>\n            <ul>\n                {props.values.map(v => (\n                    <li key={v}>\n                        <Link to={props.pathFn(v)}>{v}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Search } from \"../components/search\";\nimport { IndexHeader } from \"../components/indexHeader\";\nimport { BrowseColumn } from \"../components/browseColumn\";\nimport SEO from \"../components/seo\";\nimport { fileRoot, seriesPath, developerPath, systemPath, yearPath } from \"../util\";\nimport { byIgnoreThe } from \"../util/sort\";\n\nimport styles from \"./index.module.css\";\n\nconst IndexPage: React.FunctionComponent = ({ data }) => {\n    const searchData = data.searchData.edges.map(e => e.node);\n    const thumbnails = data.thumbnails.edges.map(e => e.node);\n    const flattenedThumbnails = thumbnails.map(t => {\n        return {\n            ...t,\n            width: t.childImageSharp.original.width,\n            height: t.childImageSharp.original.height,\n            dataUrl: t.childImageSharp.fixed.base64,\n        };\n    });\n\n    const totalSearchData = searchData.map(s => {\n        const thumbnail = flattenedThumbnails.find(t => t.relativePath.indexOf(fileRoot(s.imageFileName)) > -1);\n\n        return {\n            ...s,\n            thumbnailData: thumbnail,\n        };\n    });\n\n    return (\n        <div className={styles.root}>\n            <div className={styles.content}>\n                <SEO title=\"Fighting Game Backgrounds\" />\n                <IndexHeader className={styles.header} />\n                <Search className={styles.search} data={totalSearchData} />\n                <p>or browse {data.searchData.totalCount} backgrounds by</p>\n                <div className={styles.browseColumnContainer}>\n                    <BrowseColumn title=\"series\" pathFn={seriesPath} values={data.series.distinct.sort(byIgnoreThe)} />\n                    <BrowseColumn title=\"developer\" pathFn={developerPath} values={data.developers.distinct} />\n                    <BrowseColumn title=\"system\" pathFn={systemPath} values={data.systems.distinct} />\n                    <BrowseColumn title=\"year released\" pathFn={yearPath} values={data.years.distinct} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query {\n        searchData: allGoogleSheetLeveldataRow {\n            totalCount\n            edges {\n                node {\n                    levelName\n                    gameNameUsa\n                    system\n                    developer\n                    year\n                    series\n                    imageFileName\n                }\n            }\n        }\n        developers: allGoogleSheetLeveldataRow {\n            distinct(field: developer)\n        }\n        years: allGoogleSheetLeveldataRow {\n            distinct(field: year)\n        }\n        systems: allGoogleSheetLeveldataRow {\n            distinct(field: system)\n        }\n        series: allGoogleSheetLeveldataRow {\n            distinct(field: series)\n        }\n        thumbnails: allFile(filter: { relativePath: { regex: \"/bgs/thumb/\" } }) {\n            edges {\n                node {\n                    relativePath\n                    publicURL\n                    childImageSharp {\n                        original {\n                            width\n                            height\n                        }\n                        fixed(base64Width: 10) {\n                            base64\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import slugify from \"slugify\";\n\nexport function slug(str: string): string {\n    return slugify(str, { remove: /[*+~.()'\"!:@]/g, lower: true });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { slug } from \"./slug\";\n\nexport function backgroundPath({ gameNameUsa, levelName }: { gameNameUsa: string; levelName: string }) {\n    return \"/bg:\" + [gameNameUsa, levelName].map(slug).join(\"/\");\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { slug } from \"./slug\";\n\nexport function systemPath(system: string) {\n    return \"/system:\" + slug(system);\n}\n","import { slug } from \"./slug\";\n\nexport function yearPath(year: number | null | undefined) {\n    if (year) {\n        return \"/year:\" + year;\n    } else {\n        return \"/year:missing\";\n    }\n}\n","import { slug } from \"./slug\";\n\nexport function gamePath(gameNameUsa: string) {\n    return \"/game:\" + slug(gameNameUsa);\n}\n","import { slug } from \"./slug\";\n\nexport function developerPath(developer: string) {\n    return \"/developer:\" + slug(developer);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { backgroundPath } from \"../util/backgroundPath\";\n\nimport styles from \"./backgroundLink.module.css\";\n\ninterface BackgroundLinkProps {\n    className?: string;\n    levelName: string;\n    gameNameUsa: string;\n    newPage?: boolean;\n}\n\nexport const BackgroundLink: React.FunctionComponent<BackgroundLinkProps> = ({\n    className,\n    levelName,\n    gameNameUsa,\n    newPage,\n    children,\n}) => {\n    const classes = classnames(styles.root, className);\n\n    const entryPath = backgroundPath({ gameNameUsa, levelName });\n\n    children = children || `${gameNameUsa} - ${levelName}`;\n\n    if (newPage) {\n        return (\n            <a className={classes} href={entryPath} target=\"_blank\">\n                {children}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes} to={entryPath}>\n                {children}\n            </Link>\n        );\n    }\n};\n","import { slug } from \"./slug\";\n\nexport function seriesPath(series: string) {\n    return \"/series:\" + slug(series);\n}\n","export function fileRoot(filename: string): string {\n    return filename.split(\".\")[0];\n}\n","export * from \"./backgroundPath\";\nexport * from \"./developerPath\";\nexport * from \"./systemPath\";\nexport * from \"./yearPath\";\nexport * from \"./seriesPath\";\nexport * from \"./gamePath\";\nexport * from \"./fileRoot\";\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport LazyLoad from \"react-lazy-load\";\nimport { BackgroundLink } from \"./backgroundLink\";\n\nimport styles from \"./levelListEntry.module.css\";\n\nexport const LevelListEntry: React.FunctionComponent = ({\n    className,\n    thumbnailData,\n    levelName,\n    gameNameUsa,\n    developer,\n    system,\n}) => {\n    const aspectRatio = thumbnailData.height / thumbnailData.width;\n    const classes = classnames(styles.root, className);\n\n    return (\n        <BackgroundLink levelName={levelName} gameNameUsa={gameNameUsa}>\n            <div className={classes}>\n                <div className={styles.imageContainer} style={{ paddingBottom: 200 * aspectRatio }}>\n                    <img\n                        className={styles.lowRes}\n                        src={thumbnailData.dataUrl}\n                        alt={`${levelName} from ${gameNameUsa}`}\n                    />\n                    <noscript>\n                        <img\n                            className={styles.highRes}\n                            src={thumbnailData.publicURL}\n                            alt={`${levelName} from ${gameNameUsa}`}\n                        />\n                    </noscript>\n                    <LazyLoad className={styles.lazyImg} offsetBottom={400}>\n                        <>\n                            <img\n                                className={styles.highRes}\n                                src={thumbnailData.publicURL}\n                                alt={`${levelName} from ${gameNameUsa}`}\n                            />\n                        </>\n                    </LazyLoad>\n                </div>\n                <div className={styles.levelName}>{levelName}</div>\n            </div>\n        </BackgroundLink>\n    );\n};\n","export function byLevelName(a: { levelName: string }, b: { levelName: string }): number {\n    return a.levelName.localeCompare(b.levelName);\n}\n\nconst thePrefix = /the /i;\n\nexport function byIgnoreThe(a: string, b: string): number {\n    const aValue = a.replace(thePrefix, \"\");\n    const bValue = b.replace(thePrefix, \"\");\n\n    return aValue.localeCompare(bValue);\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface SEOProps {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  title: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default SEO\n"],"sourceRoot":""}